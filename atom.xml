<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>batype-note</title>
  
  
  <link href="https://note.batype.com/atom.xml" rel="self"/>
  
  <link href="https://note.batype.com/"/>
  <updated>2024-03-08T09:59:41.851Z</updated>
  <id>https://note.batype.com/</id>
  
  <author>
    <name>songshao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>实现 ReturnType</title>
    <link href="https://note.batype.com/typescript/questions/returntype.html"/>
    <id>https://note.batype.com/typescript/questions/returntype.html</id>
    <published>2024-03-08T09:58:10.562Z</published>
    <updated>2024-03-08T09:59:41.851Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>不使用 <code>ReturnType</code> 实现 TypeScript 的 <code>ReturnType&lt;T&gt;</code> 泛型。</p><p>例如：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">fn</span> = (<span class="params">v: <span class="built_in">boolean</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (v)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> a = <span class="title class_">MyReturnType</span>&lt;<span class="keyword">typeof</span> fn&gt; <span class="comment">// 应推导出 &quot;1 | 2&quot;</span></span><br></pre></td></tr></table></figure><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">MyReturnType</span>&lt;T <span class="keyword">extends</span> <span class="title class_">Function</span>&gt; = T <span class="keyword">extends</span> (...<span class="attr">args</span>: <span class="built_in">any</span>[]) =&gt; infer R</span><br><span class="line">? R</span><br><span class="line">: <span class="built_in">never</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fn</span> = (<span class="params">v: <span class="built_in">boolean</span></span>) =&gt; (v ? <span class="number">1</span> : <span class="number">2</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fn1</span> = (<span class="params">v: <span class="built_in">boolean</span>, w: <span class="built_in">any</span></span>) =&gt; (v ? <span class="number">1</span> : <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> fnType = <span class="title class_">MyReturnType</span>&lt;<span class="keyword">typeof</span> fn&gt;;</span><br><span class="line"><span class="keyword">type</span> fnType1 = <span class="title class_">MyReturnType</span>&lt;<span class="keyword">typeof</span> fn1&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">ComplexObject</span> = &#123;</span><br><span class="line">    <span class="attr">a</span>: [<span class="number">12</span>, <span class="string">&quot;foo&quot;</span>];</span><br><span class="line">    <span class="attr">bar</span>: <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    <span class="title function_">prev</span>(): <span class="built_in">number</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> fnType2 = <span class="title class_">MyReturnType</span>&lt;<span class="function">() =&gt;</span> <span class="title class_">ComplexObject</span>&gt;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">不使用 `ReturnType` 实现 TypeScript 的 `ReturnType&lt;T&gt;` 泛型。</summary>
    
    
    
    <category term="前端" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/type/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/tags/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/tags/type/"/>
    
  </entry>
  
  <entry>
    <title>实现 Omit</title>
    <link href="https://note.batype.com/typescript/questions/omit.html"/>
    <id>https://note.batype.com/typescript/questions/omit.html</id>
    <published>2024-03-08T09:55:00.513Z</published>
    <updated>2024-03-08T09:57:50.560Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>不使用 <code>Omit</code> 实现 <code>TypeScript</code> 的 <code>Omit&lt;T, K&gt;</code> 泛型。</p><p><code>Omit</code> 会创建一个省略 <code>K</code> 中字段的 <code>T</code> 对象。</p><p>例如：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Todo</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">completed</span>: <span class="built_in">boolean</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TodoPreview</span> = <span class="title class_">MyOmit</span>&lt;<span class="title class_">Todo</span>, <span class="string">&#x27;description&#x27;</span> | <span class="string">&#x27;title&#x27;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">todo</span>: <span class="title class_">TodoPreview</span> = &#123;</span><br><span class="line">  <span class="attr">completed</span>: <span class="literal">false</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Todo</span> &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">description</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">completed</span>: <span class="built_in">boolean</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">MyOmit</span>&lt;T, K <span class="keyword">extends</span> keyof T&gt; = &#123;</span><br><span class="line">    [P <span class="keyword">in</span> keyof T <span class="keyword">as</span> P <span class="keyword">extends</span> K ? <span class="built_in">never</span> : P]: T[P];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @ts-expect-error</span></span><br><span class="line"><span class="keyword">type</span> error = <span class="title class_">MyOmit</span>&lt;<span class="title class_">Todo</span>, <span class="string">&quot;description&quot;</span> | <span class="string">&quot;invalid&quot;</span>&gt;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">不使用 `Omit` 实现 `TypeScript` 的 `Omit&lt;T, K&gt;` 泛型。</summary>
    
    
    
    <category term="前端" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/tags/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/tags/type/"/>
    
  </entry>
  
  <entry>
    <title>实现 Pick</title>
    <link href="https://note.batype.com/typescript/questions/pick.html"/>
    <id>https://note.batype.com/typescript/questions/pick.html</id>
    <published>2024-03-08T09:47:52.213Z</published>
    <updated>2024-03-08T09:55:46.617Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>不使用 <code>Pick&lt;T, K&gt;</code> ，实现 TS 内置的 <code>Pick&lt;T, K&gt;</code> 的功能</p><p><strong>从类型 <code>T</code> 中选出符合 <code>K</code> 的属性，构造一个新的类型</strong>。</p><p>例如：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Todo</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">completed</span>: <span class="built_in">boolean</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TodoPreview</span> = <span class="title class_">MyPick</span>&lt;<span class="title class_">Todo</span>, <span class="string">&#x27;title&#x27;</span> | <span class="string">&#x27;completed&#x27;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">todo</span>: <span class="title class_">TodoPreview</span> = &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;Clean room&#x27;</span>,</span><br><span class="line">    <span class="attr">completed</span>: <span class="literal">false</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Todo</span> &#123;</span><br><span class="line"><span class="attr">title</span>: <span class="built_in">string</span>;</span><br><span class="line"><span class="attr">description</span>: <span class="built_in">string</span>;</span><br><span class="line"><span class="attr">completed</span>: <span class="built_in">boolean</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 1. K extends keyof T, K继承所有的T的key属性为type</span></span><br><span class="line"><span class="comment">// 2. P in keyof T 拿出所有的key，在extends K，如果是true，则返回 P</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">MyPick</span>&lt;T, K <span class="keyword">extends</span> keyof T&gt; = &#123;</span><br><span class="line">[P <span class="keyword">in</span> keyof T <span class="keyword">as</span> P <span class="keyword">extends</span> K ? P : <span class="built_in">never</span>]: T[P];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TodoPreviewMy</span> = <span class="title class_">MyPick</span>&lt;<span class="title class_">Todo</span>, <span class="string">&quot;title&quot;</span> | <span class="string">&quot;completed&quot;</span>&gt;;</span><br><span class="line"><span class="comment">// type TodoPreviewMy = &#123;</span></span><br><span class="line"><span class="comment">//     title: string;</span></span><br><span class="line"><span class="comment">//     completed: boolean;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">todo</span>: <span class="title class_">TodoPreviewMy</span> = &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&quot;Clean room&quot;</span>,</span><br><span class="line">    <span class="attr">completed</span>: <span class="literal">false</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">不使用 `Pick&lt;T, K&gt;` ，实现 TS 内置的 `Pick&lt;T, K&gt;` 的功能.</summary>
    
    
    
    <category term="前端" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/tags/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/tags/type/"/>
    
  </entry>
  
  <entry>
    <title>uni-app APP 更新版本提示</title>
    <link href="https://note.batype.com/uni-app/vue/update.html"/>
    <id>https://note.batype.com/uni-app/vue/update.html</id>
    <published>2023-12-21T08:28:05.000Z</published>
    <updated>2023-12-21T08:32:39.632Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h3 id="AppUpdate-方法"><a href="#AppUpdate-方法" class="headerlink" title="AppUpdate 方法"></a>AppUpdate 方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> baseUrl <span class="keyword">from</span> <span class="string">&#x27;@/basecall/utils.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">AppUpdate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> appleId = <span class="number">2021004105638058</span>;</span><br><span class="line">  <span class="keyword">let</span> _this = <span class="variable language_">this</span>;</span><br><span class="line">  <span class="keyword">let</span> platform = uni.<span class="title function_">getSystemInfoSync</span>().<span class="property">platform</span>;</span><br><span class="line">  <span class="comment">//1. 获取当前版本号</span></span><br><span class="line">  <span class="keyword">let</span> curversion = <span class="number">100</span>;</span><br><span class="line">  plus.<span class="property">runtime</span>.<span class="title function_">getProperty</span>(plus.<span class="property">runtime</span>.<span class="property">appid</span>, <span class="keyword">function</span> (<span class="params">widgetInfo</span>) &#123;</span><br><span class="line">    curversion = widgetInfo.<span class="property">version</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;当前版本&quot;</span>, curversion);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">    2， 用当前版本号提交给服务端，判断是否需要更新，接口返回信息如下</span></span><br><span class="line"><span class="comment">        versionIdinteger(int64)</span></span><br><span class="line"><span class="comment">        versionId版本号string</span></span><br><span class="line"><span class="comment">        intro版本描述string</span></span><br><span class="line"><span class="comment">        forced是否强制更新boolean</span></span><br><span class="line"><span class="comment">        news是否是最新版本boolean</span></span><br><span class="line"><span class="comment">        urlapk地址string</span></span><br><span class="line"><span class="comment">        createTime创建时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">  uni.<span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: baseUrl.<span class="property">baseUrl</span> + <span class="string">&quot;/getVersion&quot;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; versionId, forced, url, createTime &#125; = res.<span class="property">data</span>.<span class="property">data</span>;</span><br><span class="line">  uni.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;url&#x27;</span>, url);</span><br><span class="line">      <span class="keyword">let</span> currTimeStamp = <span class="keyword">new</span> <span class="title class_">Date</span>(createTime).<span class="title function_">getTime</span>();</span><br><span class="line">      <span class="comment">/* 判断是否是最新版 */</span></span><br><span class="line">      <span class="keyword">if</span> (versionId !== curversion) &#123;</span><br><span class="line">        <span class="comment">//forced true 强制更新 false 自然更新</span></span><br><span class="line">        <span class="keyword">if</span> (forced == <span class="string">&#x27;true&#x27;</span>) &#123;</span><br><span class="line">          uni.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&quot;紧急升级通知&quot;</span>,</span><br><span class="line">            <span class="attr">content</span>:</span><br><span class="line">              <span class="string">&quot;亲爱的用户，为了提供更好的使用体验与功能改进，我们进行了系统升级。请立即完成强制升级，否则将无法正常使用APP。感谢您的配合与支持！&quot;</span>,</span><br><span class="line">            <span class="attr">confirmText</span>: <span class="string">&quot;立即更新&quot;</span>,</span><br><span class="line">            <span class="attr">showCancel</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">              <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (platform == <span class="string">&quot;ios&quot;</span>) &#123;</span><br><span class="line">                  plus.<span class="property">runtime</span>.<span class="title function_">launchApplication</span>(</span><br><span class="line">                    &#123;</span><br><span class="line">                      <span class="attr">action</span>: <span class="string">`itms-apps://itunes.apple.com/cn/app/id<span class="subst">$&#123;appleId&#125;</span>?mt=8`</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                      <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">                        <span class="string">&quot;Open system default browser failed: &quot;</span> + e.<span class="property">message</span></span><br><span class="line">                      );</span><br><span class="line">                    &#125;</span><br><span class="line">                  );</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">                    <span class="attr">icon</span>: <span class="string">&quot;none&quot;</span>,</span><br><span class="line">                    <span class="attr">mask</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&quot;有新的版本发布，程序已启动自动更新。&quot;</span>,</span><br><span class="line">                    <span class="attr">duration</span>: <span class="number">5000</span>,</span><br><span class="line">                  &#125;);</span><br><span class="line">                  <span class="comment">//设置 最新版本apk的下载链接 这是固定的</span></span><br><span class="line">                  <span class="keyword">let</span> downloadApkUrl = url;</span><br><span class="line">                  <span class="variable language_">console</span>.<span class="title function_">log</span>(downloadApkUrl);</span><br><span class="line">                  plus.<span class="property">runtime</span>.<span class="title function_">openURL</span>(downloadApkUrl);</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          uni.<span class="title function_">getStorage</span>(&#123;</span><br><span class="line">            <span class="attr">key</span>: <span class="string">&quot;tip_version_update_time&quot;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">              <span class="keyword">var</span> lastTimeStamp = res.<span class="property">data</span>; <span class="comment">// 本地时间戳</span></span><br><span class="line">              <span class="keyword">var</span> tipTimeLength = <span class="number">0</span>; <span class="comment">// 时间间隔</span></span><br><span class="line">              <span class="keyword">let</span> cha = lastTimeStamp + tipTimeLength - currTimeStamp;</span><br><span class="line">              <span class="keyword">if</span> (lastTimeStamp + tipTimeLength &gt; currTimeStamp) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;当后台时间戳大于本地时间戳才会进入&quot;</span>);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;立即更新&quot;</span>);</span><br><span class="line">                <span class="comment">//重新设置时间戳</span></span><br><span class="line">                uni.<span class="title function_">setStorage</span>(&#123;</span><br><span class="line">                  <span class="attr">key</span>: <span class="string">&quot;tip_version_update_time&quot;</span>,</span><br><span class="line">                  <span class="attr">data</span>: currTimeStamp,</span><br><span class="line">                  <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;setStorage-success&quot;</span>);</span><br><span class="line">                  &#125;,</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                uni.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">                  <span class="attr">title</span>: <span class="string">&quot;版本更新&quot;</span>,</span><br><span class="line">                  <span class="attr">content</span>:</span><br><span class="line">                    <span class="string">&quot;尊敬的用户，我们为您准备了最新的版本更新，内含诸多新功能与用户体验优化。点击立即升级，享受更多精彩和便利。&quot;</span>,</span><br><span class="line">                  <span class="attr">confirmText</span>: <span class="string">&quot;立即更新&quot;</span>,</span><br><span class="line">                  <span class="attr">cancelText</span>: <span class="string">&quot;取消&quot;</span>,</span><br><span class="line">                  <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">                      <span class="keyword">if</span> (platform == <span class="string">&quot;ios&quot;</span>) &#123;</span><br><span class="line">                        plus.<span class="property">runtime</span>.<span class="title function_">launchApplication</span>(</span><br><span class="line">                          &#123;</span><br><span class="line">                            <span class="attr">action</span>: <span class="string">`itms-apps://itunes.apple.com/cn/app/id<span class="subst">$&#123;appleId&#125;</span>?mt=8`</span>,</span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                            <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">                              <span class="string">&quot;Open system default browser failed: &quot;</span> + e.<span class="property">message</span></span><br><span class="line">                            );</span><br><span class="line">                          &#125;</span><br><span class="line">                        );</span><br><span class="line">                      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">                          <span class="attr">icon</span>: <span class="string">&quot;none&quot;</span>,</span><br><span class="line">                          <span class="attr">mask</span>: <span class="literal">true</span>,</span><br><span class="line">                          <span class="attr">title</span>: <span class="string">&quot;有新的版本发布，程序已启动自动更新。&quot;</span>,</span><br><span class="line">                          <span class="attr">duration</span>: <span class="number">5000</span>,</span><br><span class="line">                        &#125;);</span><br><span class="line">                        <span class="comment">//设置 最新版本apk的下载链接 这是固定的 每次把包放在这个链接里里面即可 由后端制作</span></span><br><span class="line">                        <span class="keyword">let</span> downloadApkUrl = url;</span><br><span class="line">                        plus.<span class="property">runtime</span>.<span class="title function_">openURL</span>(downloadApkUrl);</span><br><span class="line">                      &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">cancel</span>) &#123;</span><br><span class="line">                      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;下次一定&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;,</span><br><span class="line">                &#125;);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">fail</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">              uni.<span class="title function_">setStorage</span>(&#123;</span><br><span class="line">                <span class="attr">key</span>: <span class="string">&quot;tip_version_update_time&quot;</span>,</span><br><span class="line">                <span class="attr">data</span>: currTimeStamp,</span><br><span class="line">                <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;setStorage-success&quot;</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(createTime, <span class="string">&quot;createTimecreateTime&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">fail</span>: <span class="function">() =&gt;</span> &#123;&#125;,</span><br><span class="line">    <span class="attr">complete</span>: <span class="function">() =&gt;</span> &#123;&#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在APP-vue中注册"><a href="#在APP-vue中注册" class="headerlink" title="在APP.vue中注册"></a>在APP.vue中注册</h3><p>在<code>App.vue</code>中，我们需要在<code>onLaunch</code>生命周期函数中调用<code>AppUpdate</code>方法，来检查是否有新版本的APP。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppUpdate</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/common/AppUpdate.js&#x27;</span>;</span><br><span class="line"><span class="title function_">onLaunch</span>(<span class="params"></span>) &#123;    </span><br><span class="line">    <span class="title class_">AppUpdate</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">在`App.vue`中，我们需要在`onLaunch`生命周期函数中调用`AppUpdate`方法，来检查是否有新版本的APP。</summary>
    
    
    
    <category term="uni-app" scheme="https://note.batype.com/categories/uni-app/"/>
    
    <category term="vue" scheme="https://note.batype.com/categories/uni-app/vue/"/>
    
    <category term="AppUpdate" scheme="https://note.batype.com/categories/uni-app/vue/AppUpdate/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="uni-app" scheme="https://note.batype.com/tags/uni-app/"/>
    
    <category term="vue" scheme="https://note.batype.com/tags/vue/"/>
    
    <category term="AppUpdate" scheme="https://note.batype.com/tags/AppUpdate/"/>
    
  </entry>
  
  <entry>
    <title>uni-app 分享页制作</title>
    <link href="https://note.batype.com/uni-app/vue/share.html"/>
    <id>https://note.batype.com/uni-app/vue/share.html</id>
    <published>2023-12-21T08:17:38.000Z</published>
    <updated>2023-12-21T08:26:11.552Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2 id="uni-app-分享页制作"><a href="#uni-app-分享页制作" class="headerlink" title="uni-app 分享页制作"></a>uni-app 分享页制作</h2><p>通过canvas 先制作图。可以做一个canvas 背景在生成一个二维码canvas 图，在将两个canvas 合成一个图片，然后将图片分享出来。</p><h3 id="html-模板"><a href="#html-模板" class="headerlink" title="html 模板"></a>html 模板</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;view class=&quot;content&quot;&gt;</span><br><span class="line">        &lt;u-icon name=&#x27;arrow-left&#x27; @click=&quot;goBack&quot; style=&quot;position: absolute; z-index: 999; top: 80rpx; left: 40rpx; font-size: 40rpx; color: #454545;&quot;&gt;&lt;/u-icon&gt;</span><br><span class="line">        &lt;view style=&quot;width: 100%; height: calc(100vh - 44px);&quot;&gt;</span><br><span class="line">            &lt;view class=&quot;btn-opate&quot; style=&quot;&quot;&gt;</span><br><span class="line">                &lt;button type=&quot;primary&quot; size=&quot;mini&quot; @click=&quot;saveImg&quot;&gt;保存分享&lt;/button&gt;</span><br><span class="line">                &lt;button type=&quot;default&quot; size=&quot;mini&quot; @click=&quot;copyCode&quot;&gt;复制邀请码&lt;/button&gt;</span><br><span class="line">            &lt;/view&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;image class=&quot;image&quot; style=&quot;width: 100%; height: calc(100vh - 44px);&quot; :src=&quot;ImagePath&quot; mode=&quot;widthFix&quot;&gt;&lt;/image&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">        &lt;view v-if=&quot;show&quot;&gt;</span><br><span class="line">            &lt;canvas canvas-id=&quot;myCanvas&quot; style=&quot;width: 100vw; height: 100vh;&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">            &lt;canvas canvas-id=&quot;qrcode&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="二维码制作"><a href="#二维码制作" class="headerlink" title="二维码制作"></a>二维码制作</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">UQRCode</span> <span class="keyword">from</span> <span class="string">&#x27;uqrcodejs&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">qrCode</span>(<span class="params"></span>)&#123;</span><br><span class="line">    uni.<span class="title function_">showLoading</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;分享页制作中...&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">var</span> qr = <span class="keyword">new</span> <span class="title class_">UQRCode</span>();</span><br><span class="line">    <span class="comment">// 设置二维码内容</span></span><br><span class="line">    qr.<span class="property">data</span> = <span class="string">`https://app.xianyuangu.com/#/pages/login/h5login?registerCode=<span class="subst">$&#123;<span class="variable language_">this</span>.invitationCode&#125;</span>`</span>;</span><br><span class="line">    <span class="comment">// 设置二维码大小，必须与canvas设置的宽高一致</span></span><br><span class="line">    qr.<span class="property">size</span> = <span class="number">120</span>;</span><br><span class="line">    <span class="comment">// 调用制作二维码方法</span></span><br><span class="line">    qr.<span class="title function_">make</span>();</span><br><span class="line">    <span class="keyword">const</span> context = uni.<span class="title function_">createCanvasContext</span>(<span class="string">&#x27;qrcode&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">    qr.<span class="property">canvasContext</span> = context;</span><br><span class="line">    <span class="comment">// 调用绘制方法将二维码图案绘制到canvas上</span></span><br><span class="line">    qr.<span class="title function_">drawCanvas</span>();</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 将canvas内容保存为图片</span></span><br><span class="line">        uni.<span class="title function_">canvasToTempFilePath</span>(&#123;</span><br><span class="line">            <span class="attr">canvasId</span>: <span class="string">&#x27;qrcode&#x27;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">qrcode</span> = res.<span class="property">tempFilePath</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">drawImageToCanvas</span>();</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="variable language_">this</span>);</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="绘制图片"><a href="#绘制图片" class="headerlink" title="绘制图片"></a>绘制图片</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">drawImageToCanvas</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 获取 canvas 上下文</span></span><br><span class="line">    <span class="keyword">const</span> systemInfo = uni.<span class="title function_">getSystemInfoSync</span>();</span><br><span class="line">    <span class="keyword">const</span> canvasWidth = systemInfo.<span class="property">windowWidth</span>;</span><br><span class="line">    <span class="keyword">const</span> canvasHeight = systemInfo.<span class="property">windowHeight</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> context = uni.<span class="title function_">createCanvasContext</span>(<span class="string">&#x27;myCanvas&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Step 6: 使用 drawImage 方法绘制图片</span></span><br><span class="line">    context.<span class="title function_">drawImage</span>(<span class="string">&#x27;/static/image/share.png&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>, canvasWidth, canvasHeight);</span><br><span class="line">    </span><br><span class="line">    context.<span class="title function_">setFillStyle</span>(<span class="string">&#x27;#D43030&#x27;</span>); <span class="comment">// 黑色文本</span></span><br><span class="line">    context.<span class="title function_">setFontSize</span>(<span class="number">32</span>); <span class="comment">// 文字大小</span></span><br><span class="line">    context.<span class="title function_">fillText</span>(<span class="variable language_">this</span>.<span class="property">invitationCode</span>, canvasWidth / <span class="number">2</span> - <span class="number">50</span>, canvasHeight / <span class="number">2</span> * <span class="number">0.84</span>);</span><br><span class="line">    </span><br><span class="line">    context.<span class="title function_">drawImage</span>(</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">qrcode</span>,</span><br><span class="line">    canvasWidth / <span class="number">3</span> - <span class="number">20</span>,</span><br><span class="line">    canvasHeight / <span class="number">2</span>,</span><br><span class="line">    canvasWidth / <span class="number">1</span> ,</span><br><span class="line">    canvasWidth / <span class="number">2</span></span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">    context.<span class="title function_">save</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Step 7: 调用 draw 方法渲染 canvas</span></span><br><span class="line">    context.<span class="title function_">draw</span>(<span class="literal">true</span>, <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 将canvas内容保存为图片</span></span><br><span class="line">        uni.<span class="title function_">canvasToTempFilePath</span>(&#123;</span><br><span class="line">            <span class="attr">canvasId</span>: <span class="string">&#x27;myCanvas&#x27;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">show</span> = <span class="literal">false</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">ImagePath</span> = res.<span class="property">tempFilePath</span>;</span><br><span class="line">            uni.<span class="title function_">hideLoading</span>();</span><br><span class="line">            <span class="comment">// 在这里可以将得到的图片路径进行保存或分享等操作</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">                uni.<span class="title function_">hideLoading</span>();</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="variable language_">this</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;, <span class="number">1000</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="保存图片"><a href="#保存图片" class="headerlink" title="保存图片"></a>保存图片</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">env</span>: uni.<span class="title function_">getSystemInfoSync</span>().<span class="property">uniPlatform</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">saveImg</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// app 保存</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">env</span> == <span class="string">&#x27;app&#x27;</span>) &#123;</span><br><span class="line">        uni.<span class="title function_">saveImageToPhotosAlbum</span>(&#123;</span><br><span class="line">            <span class="attr">filePath</span>: <span class="variable language_">this</span>.<span class="property">ImagePath</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;保存成功&#x27;</span>,</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">/** 生成一个a元素,并创建一个单击事件 */</span></span><br><span class="line">        <span class="keyword">let</span> a = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        a.<span class="property">download</span> = name || <span class="string">&quot;photo&quot;</span>; <span class="comment">// 设置图片名称</span></span><br><span class="line">        a.<span class="property">href</span> = <span class="variable language_">this</span>.<span class="property">ImagePath</span>; <span class="comment">// 将生成的URL设置为a.href属性</span></span><br><span class="line">        a.<span class="title function_">setAttribute</span>(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;myLink&quot;</span>);</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(a);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;链接&quot;</span>, a);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">exportCodeConfirm</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">exportCodeConfirm</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> event = <span class="keyword">new</span> <span class="title class_">MouseEvent</span>(<span class="string">&quot;click&quot;</span>);</span><br><span class="line">    <span class="comment">/** 触发a的单击事件 */</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;myLink&quot;</span>).<span class="title function_">dispatchEvent</span>(event);</span><br><span class="line">    &#125;, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">通过canvas 先制作图。可以做一个canvas 背景在生成一个二维码canvas 图，在将两个canvas 合成一个图片，然后将图片分享出来。</summary>
    
    
    
    <category term="uni-app" scheme="https://note.batype.com/categories/uni-app/"/>
    
    <category term="vue" scheme="https://note.batype.com/categories/uni-app/vue/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="uni-app" scheme="https://note.batype.com/tags/uni-app/"/>
    
    <category term="vue" scheme="https://note.batype.com/tags/vue/"/>
    
    <category term="canvas" scheme="https://note.batype.com/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云服务器开发端口</title>
    <link href="https://note.batype.com/linux/port/open.html"/>
    <id>https://note.batype.com/linux/port/open.html</id>
    <published>2023-12-19T15:20:21.000Z</published>
    <updated>2023-12-21T08:14:29.928Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><ol><li><p>了解端口<br>在开始之前，我们需要了解一下端口。端口是计算机网络中的一个概念，它是用于标识应用程序的逻辑地址。在互联网中，每个应用程序都需要使用一个端口来进行通信。常见的端口有 HTTP 端口（80）、FTP 端口（21）、SSH 端口（22）等等。</p></li><li><p>登录腾讯云服务器<br>首先，我们需要登录到腾讯云服务器。可以使用 SSH 工具，如 PuTTY 或 Xshell，连接到服务器。在连接成功后，输入用户名和密码即可登录到服务器。</p></li><li><p>开放端口<br>要开放端口，我们需要使用防火墙规则。腾讯云服务器默认使用的是 iptables 防火墙。我们可以使用以下命令来开放端口：</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 端口号 -j ACCEPT</span><br></pre></td></tr></table></figure><p>其中，端口号是需要开放的端口号。例如，如果要开放 SSH 端口（22），则可以使用以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 22 -j ACCEPT</span><br></pre></td></tr></table></figure><ol start="4"><li>保存规则<br>开放端口后，我们需要保存规则，以便在服务器重启后仍然有效。可以使用以下命令来保存规则：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables save</span><br></pre></td></tr></table></figure><ol start="5"><li>查看规则<br>如果想要查看当前的防火墙规则，可以使用以下命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -L</span><br></pre></td></tr></table></figure><p>这将列出当前的防火墙规则，包括已开放的端口。</p><p>总结<br>开放端口是使用腾讯云服务器的一个基本操作。通过了解端口、登录服务器、开放端口、保存规则和查看规则，我们可以轻松地开放需要的端口，以便应用程序可以正常运行。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">在开始之前，我们需要了解一下端口。端口是计算机网络中的一个概念，它是用于标识应用程序的逻辑地址。在互联网中，每个应用程序都需要使用一个端口来进行通信。常见的端口有 HTTP 端口（80）、FTP 端口（21）、SSH 端口（22）等等。</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS上安装Nginx</title>
    <link href="https://note.batype.com/linux/install/nginx.html"/>
    <id>https://note.batype.com/linux/install/nginx.html</id>
    <published>2023-12-19T15:18:25.000Z</published>
    <updated>2023-12-21T08:14:29.927Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>要在CentOS上安装Nginx，您可以按照以下步骤进行操作：</p><p>打开终端或SSH连接到CentOS服务器。</p><p>确保您的系统已经更新到最新版本。运行以下命令更新软件包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br></pre></td></tr></table></figure><p>安装Nginx。运行以下命令进行安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install nginx</span><br></pre></td></tr></table></figure><p>启动Nginx服务：</p><p>使用以下命令启动Nginx服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start nginx</span><br></pre></td></tr></table></figure><p>检查Nginx状态：</p><p>使用以下命令检查Nginx服务的状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status nginx</span><br></pre></td></tr></table></figure><p>如果Nginx正在运行，您将看到”active (running)”状态。</p><p>添加到开机启动项：</p><p>要使Nginx在系统启动时自动启动，可以使用以下命令将其添加到开机启动项：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable nginx</span><br></pre></td></tr></table></figure><p>现在，Nginx将在系统启动时自动启动。您可以通过重新启动服务器并检查Nginx状态来验证设置是否成功。请注意，上述命令假定您具有适当的权限（如sudo）来执行这些操作。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">要在CentOS上安装Nginx，您可以按照以下步骤进行操作</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="nginx" scheme="https://note.batype.com/categories/linux/nginx/"/>
    
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="nginx" scheme="https://note.batype.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>MySQL linux install</title>
    <link href="https://note.batype.com/linux/install/MySQL.html"/>
    <id>https://note.batype.com/linux/install/MySQL.html</id>
    <published>2023-12-19T15:14:19.000Z</published>
    <updated>2023-12-21T08:14:29.927Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>在线下载mysql安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><p>安装MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><p>安装MySQL服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure><p>报错 失败的软件包是： mysql-community-libs-compat-5.7.37-1.el7.x86_64<br>GPG 密钥配置为： file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-mysql<br>解决办法：原因是Mysql的GPG升级了，需要重新获取<br>使用以下命令即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022</span><br></pre></td></tr></table></figure><p>重新执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure><p>安装完毕<br>启动Mysql服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start  mysqld.service</span><br></pre></td></tr></table></figure><p>修改mysql的密码<br>查看MySQL临时密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;password&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure><p>使用临时密码先登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>注意:密码设置必须要大小写字母数字和特殊符号（,&#x2F;‘;:等）,不然不能配置成功<br>查看mysql默认密码复杂度</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW VARIABLES LIKE &#x27;validate_password%&#x27;;</span><br></pre></td></tr></table></figure><p>把MySQL的密码校验强度改为低风险</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global validate_password_policy=LOW;</span><br></pre></td></tr></table></figure><p>修改MySQL的密码长度</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global validate_password_length=4;</span><br></pre></td></tr></table></figure><p>修改密码为root</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;root&#x27;;</span><br></pre></td></tr></table></figure><p>开启mysql远程访问</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;root&#x27; with grant option;</span><br></pre></td></tr></table></figure><p>1、使用 grant 命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on 数据库名.表名 to 创建的用户名(root)@&quot;%&quot; identified by &quot;密码&quot;;</span><br></pre></td></tr></table></figure><p>2、格式说明：<br>数据库名.表名 如果写成*.*代表授权所有的数据库<br>@ 后面是访问mysql的客户端IP地址（或是 主机名） % 代表任意的客户端，如果填写 localhost 为本地访问（那此用户就不能远程访问该mysql数据库了）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges; //刷新权限</span><br></pre></td></tr></table></figure><p>退出mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit;</span><br></pre></td></tr></table></figure><p>为firewalld添加开放端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent  //开放端口</span><br><span class="line">firewall-cmd --reload  //重新加载防火墙</span><br></pre></td></tr></table></figure><p>其他配置<br>关闭MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop mysqld</span><br></pre></td></tr></table></figure><p>重启MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><p>查看MySQL运行状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mysqld</span><br></pre></td></tr></table></figure><p>设置开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable mysqld</span><br></pre></td></tr></table></figure><p>关闭开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable mysqld</span><br></pre></td></tr></table></figure><p>配置默认编码为utf8</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/my.cnf</span><br><span class="line">在[mysqld]中加入 character_set_server=utf8 </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>区分大小写</p><p>&#x2F;etc&#x2F;my.cof</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lower_case_table_names=1</span><br></pre></td></tr></table></figure><p>其他默认配置文件路径：<br>配置文件： &#x2F;etc&#x2F;my.cnf<br>日志文件： &#x2F;var&#x2F;log&#x2F;mysqld.log<br>服务启动脚本： &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;mysqld.service</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">在线下载mysql安装包</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="mysql" scheme="https://note.batype.com/categories/linux/mysql/"/>
    
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="mysql" scheme="https://note.batype.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Optional chaining 语法编程</title>
    <link href="https://note.batype.com/javascript/optional/chaining.html"/>
    <id>https://note.batype.com/javascript/optional/chaining.html</id>
    <published>2023-12-05T02:43:09.695Z</published>
    <updated>2023-12-05T02:50:54.364Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h3 id="什么是-Optional-Chaining？"><a href="#什么是-Optional-Chaining？" class="headerlink" title="什么是 Optional Chaining？"></a>什么是 Optional Chaining？</h3><p>Optional chaining 是一个现代JavaScript语法特性，允许开发者在读取对象内部嵌套属性时安全地处理 <code>undefined</code> 或 <code>null</code> 值。这种语法通过 <code>?.</code> 操作符实现，可以避免在查询属性或调用方法时因为中间某个环节不存在而引发错误。</p><h3 id="Optional-chaining-的基本使用示例如下"><a href="#Optional-chaining-的基本使用示例如下" class="headerlink" title="Optional chaining 的基本使用示例如下"></a>Optional chaining 的基本使用示例如下</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    <span class="attr">a</span>: &#123;</span><br><span class="line">        <span class="attr">b</span>: &#123;</span><br><span class="line">            <span class="attr">c</span>: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 传统的深层属性访问可能会抛出错误，如果某个属性不存在</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> value = obj &amp;&amp; obj.<span class="property">a</span> &amp;&amp; obj.<span class="property">a</span>.<span class="property">b</span> &amp;&amp; obj.<span class="property">a</span>.<span class="property">b</span>.<span class="property">c</span>;</span><br><span class="line"><span class="comment">// 使用 optional chaining 语法，安全地读取嵌套属性</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> valueWithOptionalChaining = obj?.<span class="property">a</span>?.<span class="property">b</span>?.<span class="property">c</span>; <span class="comment">// 输出 1</span></span><br><span class="line"><span class="comment">// 如果中间某个属性不存在，表达式会返回 undefined，而不是抛出错误</span></span><br><span class="line"><span class="keyword">const</span> undefinedValue = obj?.<span class="property">a</span>?.<span class="property">nonExistingProp</span>?.<span class="property">c</span>; <span class="comment">// 输出 undefined</span></span><br></pre></td></tr></table></figure><h3 id="Optional-chaining-可以用于四种不同的操作"><a href="#Optional-chaining-可以用于四种不同的操作" class="headerlink" title="Optional chaining 可以用于四种不同的操作"></a>Optional chaining 可以用于四种不同的操作</h3><ol><li>对象属性访问</li></ol><p>如上例所示，可以安全地访问嵌套对象属性。</p><ol start="2"><li>数组索引访问</li></ol><p>可以安全地访问数组的索引，如果数组是 undefined 或 null，则不会报错。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> valueAtIndex = arr?.[<span class="number">2</span>]; <span class="comment">// 输出 3</span></span><br><span class="line"><span class="keyword">const</span> nonExistingIndex = arr?.[<span class="number">5</span>]; <span class="comment">// 输出 undefined</span></span><br></pre></td></tr></table></figure><ol start="3"><li>函数或方法调用</li></ol><p>如果不确定一个对象上的函数是否存在，可以使用 optional chaining 安全地调用函数或方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Function exists&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj.<span class="property">a</span>?.(); <span class="comment">// 输出 &#x27;Function exists&#x27;</span></span><br><span class="line">obj.<span class="property">b</span>?.(); <span class="comment">// 由于 b 不存在，不执行任何操作，返回 undefined</span></span><br></pre></td></tr></table></figure><ol start="4"><li>默认值中使用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> user = &#123;&#125;;</span><br><span class="line"><span class="keyword">const</span> name = user?.<span class="property">name</span> ?? <span class="string">&quot;匿名用户&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name);</span><br></pre></td></tr></table></figure><p>要注意的是，optional chaining 语法是 ECMAScript 2020（ES11）的一部分，因此在老旧的JavaScript环境中可能不受支持。对于这些环境，可以使用Babel这样的工具来转译代码，使其兼容。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">Optional chaining 是一个现代JavaScript语法特性，允许开发者在读取对象内部嵌套属性时安全地处理 undefined 或 null 值。这种语法通过 ?. 操作符实现，可以避免在查询属性或调用方法时因为中间某个环节不存在而引发错误。</summary>
    
    
    
    <category term="前端" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="es6" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/es6/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://note.batype.com/tags/JavaScript/"/>
    
    <category term="es6" scheme="https://note.batype.com/tags/es6/"/>
    
  </entry>
  
  <entry>
    <title>Docker 安装Redis</title>
    <link href="https://note.batype.com/linux/docker/redis.html"/>
    <id>https://note.batype.com/linux/docker/redis.html</id>
    <published>2023-11-22T13:24:32.000Z</published>
    <updated>2023-11-28T08:49:04.273Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h3 id="下载redis-镜像"><a href="#下载redis-镜像" class="headerlink" title="下载redis 镜像"></a>下载redis 镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull redis</span><br></pre></td></tr></table></figure><h3 id="启动镜像并同步数据"><a href="#启动镜像并同步数据" class="headerlink" title="启动镜像并同步数据"></a>启动镜像并同步数据</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name redis -p 6379:6379 \</span><br><span class="line"> --restart=always \</span><br><span class="line"> -v /home/xt/redis/redis.conf:/etc/redis/redis.conf \</span><br><span class="line"> -v /home/xt/redis/data:/data \</span><br><span class="line"> redis redis-server /etc/redis/redis.conf</span><br></pre></td></tr></table></figure><h3 id="添加密码"><a href="#添加密码" class="headerlink" title="添加密码"></a>添加密码</h3><h4 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it 04f824eaf3800958615a9874084ea6d57ab346cd61723a1eb54074a9477f1efe /bin/bash</span><br></pre></td></tr></table></figure><p>在Redis命令行中，我们可以使用config set命令来设置Redis的密码。以下是设置密码的代码和注释。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config set requirepass your_password</span><br></pre></td></tr></table></figure><h3 id="重启Redis容器"><a href="#重启Redis容器" class="headerlink" title="重启Redis容器"></a>重启Redis容器</h3><p>完成上述步骤后，我们需要重启Redis容器使密码生效。可以使用以下命令重启Redis容器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart 04f824eaf3800958615a9874084ea6d57ab346cd61723a1eb54074a9477f1efe</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">Docker 安装Redis,并且进行数据和配置文件同步，以及密码修改。</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="docker" scheme="https://note.batype.com/categories/linux/docker/"/>
    
    <category term="redis" scheme="https://note.batype.com/categories/linux/docker/redis/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="docker， redis" scheme="https://note.batype.com/tags/docker%EF%BC%8C-redis/"/>
    
  </entry>
  
  <entry>
    <title>linux 配置缩写快捷操作</title>
    <link href="https://note.batype.com/linux/config/git-config.html"/>
    <id>https://note.batype.com/linux/config/git-config.html</id>
    <published>2023-11-13T07:52:24.000Z</published>
    <updated>2023-11-28T08:49:04.275Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>编辑~&#x2F;.zshrc 增加自定义配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alias gps=&quot;git push origin&quot;</span><br><span class="line">alias gcm=&quot;git add . &amp;&amp; git commit -m &quot;</span><br><span class="line">alias gpl=&quot;git pull origin&quot;</span><br><span class="line">alias gco=&quot;git checkout&quot;</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">Git linux 配置缩写快捷操作，可以提升效能开发。</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="git" scheme="https://note.batype.com/categories/linux/git/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Git" scheme="https://note.batype.com/tags/Git/"/>
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>ubantu 安装Maven 和jdk 步骤</title>
    <link href="https://note.batype.com/linux/install/maven/jdk.html"/>
    <id>https://note.batype.com/linux/install/maven/jdk.html</id>
    <published>2023-11-13T07:35:10.000Z</published>
    <updated>2023-11-28T08:49:04.276Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>To install Maven and JDK (Java Development Kit) on Ubuntu, you can follow these steps:</p><p>Open a terminal on your Ubuntu system.</p><p>Update the package lists by running the following command:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>Install Maven by running the following command:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install maven</span><br></pre></td></tr></table></figure><p>This will install Maven and its dependencies.</p><p>Verify the installation by running the following command:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn --version</span><br></pre></td></tr></table></figure><p>This should display the version of Maven installed on your system.</p><p>Install JDK (Java Development Kit) using the following steps:</p><p>a. Check if Java is already installed on your system by running the following command:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum list installed | grep java</span><br><span class="line">或者</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><p>If Java is not installed, you will see an error message.</p><p>b. select yum list package version</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum search java | grep -i --color jdk</span><br></pre></td></tr></table></figure><p>c. Install the default JDK package by running the following command:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install java-1.8.0-openjdk.x86_64</span><br><span class="line">or</span><br><span class="line">sudo apt install default-jdk</span><br></pre></td></tr></table></figure><p>This will install the default JDK package available in the Ubuntu package repository.</p><p>d. Verify the installation by running the following command:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac -version</span><br></pre></td></tr></table></figure><p>This should display the version of the JDK installed on your system.</p><p>Additionally, you can also run the following command to check the Java Runtime Environment (JRE) version:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>This will display the JRE version.</p><p>e. jdk checkout version link</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/java 1</span><br><span class="line">sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/javac 1</span><br></pre></td></tr></table></figure><p>f. use shell checkout version</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --config java</span><br><span class="line">有 3 个候选项可用于替换 java (提供 /usr/bin/java)。</span><br><span class="line"></span><br><span class="line">选择       路径                                          优先级  状态</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">* 0            /usr/lib/jvm/java-17-openjdk-amd64/bin/java      1711      自动模式</span><br><span class="line">1            /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/java   1         手动模式</span><br><span class="line">2            /usr/lib/jvm/java-17-openjdk-amd64/bin/java      1711      手动模式</span><br><span class="line">3            /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java   1081      手动模式</span><br><span class="line"></span><br><span class="line">要维持当前值[*]请按&lt;回车键&gt;，或者键入选择的编号：1</span><br></pre></td></tr></table></figure><p>That’s it! You have now installed Maven and JDK on your Ubuntu system. You can use Maven for building projects and the JDK for developing and running Java applications.</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">To install Maven and JDK (Java Development Kit) on Ubuntu, you can follow these steps。</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="maven" scheme="https://note.batype.com/categories/linux/maven/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="maven" scheme="https://note.batype.com/tags/maven/"/>
    
    <category term="jdk" scheme="https://note.batype.com/tags/jdk/"/>
    
  </entry>
  
  <entry>
    <title>zsh install</title>
    <link href="https://note.batype.com/linux/install/zsh.html"/>
    <id>https://note.batype.com/linux/install/zsh.html</id>
    <published>2023-11-13T06:32:08.000Z</published>
    <updated>2023-11-28T08:49:04.281Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>Manual Installation</p><h3 id="Clone-The-Repository"><a href="#Clone-The-Repository" class="headerlink" title="Clone The Repository"></a>Clone The Repository</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://githubfast.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh</span><br></pre></td></tr></table></figure><h3 id="Optionally-Backup-Your-Existing-zshrc-File"><a href="#Optionally-Backup-Your-Existing-zshrc-File" class="headerlink" title="Optionally, Backup Your Existing ~&#x2F;.zshrc File"></a>Optionally, Backup Your Existing ~&#x2F;.zshrc File</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp ~/.zshrc ~/.zshrc.orig</span><br></pre></td></tr></table></figure><h3 id="Create-A-New-Zsh-Configuration-File"><a href="#Create-A-New-Zsh-Configuration-File" class="headerlink" title="Create A New Zsh Configuration File"></a>Create A New Zsh Configuration File</h3><p>You can create a new zsh config file by copying the template that we have included for you.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</span><br></pre></td></tr></table></figure><h3 id="Change-Your-Default-Shell"><a href="#Change-Your-Default-Shell" class="headerlink" title="Change Your Default Shell"></a>Change Your Default Shell</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">which zsh</span><br><span class="line">chsh -s $(which zsh)</span><br></pre></td></tr></table></figure><p>You must log out from your user session and log back in to see this change.</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">Oh My Zsh is an open source, community-driven framework for managing your zsh configuration.</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="zsh" scheme="https://note.batype.com/categories/linux/zsh/"/>
    
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="zsh" scheme="https://note.batype.com/tags/zsh/"/>
    
  </entry>
  
  <entry>
    <title>docker-compose install</title>
    <link href="https://note.batype.com/linux/install/docker-compose.html"/>
    <id>https://note.batype.com/linux/install/docker-compose.html</id>
    <published>2023-11-13T02:36:03.000Z</published>
    <updated>2023-11-28T08:49:04.272Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h3 id="Curl-下载"><a href="#Curl-下载" class="headerlink" title="Curl 下载"></a>Curl 下载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L &quot;https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><h3 id="修改权限"><a href="#修改权限" class="headerlink" title="修改权限"></a>修改权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><h3 id="查询版本"><a href="#查询版本" class="headerlink" title="查询版本"></a>查询版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>需要将运行yml 命名为 docker-compose.yml</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">ubantu use wechat, 使用的是模拟window环境打开wechat。</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="docker-compose" scheme="https://note.batype.com/categories/linux/docker-compose/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="docker-compose" scheme="https://note.batype.com/tags/docker-compose/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu解压Zip文件命令详解</title>
    <link href="https://note.batype.com/linux/use/zip.html"/>
    <id>https://note.batype.com/linux/use/zip.html</id>
    <published>2023-11-12T11:22:59.000Z</published>
    <updated>2023-11-28T08:49:04.277Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><p>Ubuntu解压Zip文件的命令是“unzip”，它可以解压几乎所有的Zip文件。其基本的语法为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip [option] filename.zip</span><br></pre></td></tr></table></figure><p>其中，filename.zip表示要解压的Zip文件名，option参数是可选的，用来控制解压的行为，常用的option参数如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-d：指定解压到的目录，例如：unzip -d /home/user/untitled filename.zip，即将filename.zip解压到/home/user/untitled目录；</span><br><span class="line">-q：不显示详细信息，即不显示每个文件的解压进度信息；</span><br><span class="line">-o：覆盖目标文件，即如果目标文件存在就覆盖它；</span><br><span class="line">-P：指定Zip文件的密码。</span><br></pre></td></tr></table></figure><h3 id="解压Zip文件到当前路径"><a href="#解压Zip文件到当前路径" class="headerlink" title="解压Zip文件到当前路径"></a>解压Zip文件到当前路径</h3><p>解压一个Zip文件到当前路径很简单，只要在终端中输入“unzip filename.zip”即可。比如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip archive.zip</span><br></pre></td></tr></table></figure><p>上述命令将会将“archive.zip”文件解压到当前路径中。如果你希望将Zip文件解压到另外一个路径，可以使用“-d”参数，如下所示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip archive.zip -d /home/user/some_folder</span><br></pre></td></tr></table></figure><p>上述命令将会将“archive.zip”文件解压到“&#x2F;home&#x2F;user&#x2F;some_folder”路径中。</p><h3 id="解压指定的文件"><a href="#解压指定的文件" class="headerlink" title="解压指定的文件"></a>解压指定的文件</h3><p>有时候我们只需要解压Zip文件中的某些文件，而不是全部文件，这时候可以使用“unzip -j”命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip -j archive.zip file.txt</span><br></pre></td></tr></table></figure><p>上述命令将会将“archive.zip”文件中的“file.txt”文件解压到当前路径中。</p><h3 id="解压时覆盖已存在的文件"><a href="#解压时覆盖已存在的文件" class="headerlink" title="解压时覆盖已存在的文件"></a>解压时覆盖已存在的文件</h3><p>默认情况下，如果解压的目标文件已经存在，unzip命令会提示是否覆盖。如果你希望不进行提示，强制覆盖已经存在的文件，可以使用“-o”参数。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip -o archive.zip</span><br></pre></td></tr></table></figure><p>上述命令将会解压“archive.zip”文件到当前路径中，如果有重名的文件会强制覆盖。</p><h3 id="解压时保留目录结构"><a href="#解压时保留目录结构" class="headerlink" title="解压时保留目录结构"></a>解压时保留目录结构</h3><p>默认情况下，unzip命令会将Zip文件中的所有文件解压到当前路径中，不管其原来所在的目录结构。如果你希望保留原来的目录结构，可以使用“unzip -j”命令，如下所示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip archive.zip -d /home/user/some_folder</span><br></pre></td></tr></table></figure><p>上述命令将会将“archive.zip”文件解压到“&#x2F;home&#x2F;user&#x2F;some_folder”路径中，并保留原来的目录结构。</p><h3 id="解压时指定密码"><a href="#解压时指定密码" class="headerlink" title="解压时指定密码"></a>解压时指定密码</h3><p>如果Zip文件设置了密码，那么我们需要在解压时指定密码。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip -P secretPassword archive.zip</span><br></pre></td></tr></table></figure><p>上述命令将会解压“archive.zip”文件，并使用“secretPassword”作为密码。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">Ubuntu解压Zip文件的命令是“unzip”，它可以解压几乎所有的Zip文件。。</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="zip" scheme="https://note.batype.com/categories/linux/zip/"/>
    
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="zip" scheme="https://note.batype.com/tags/zip/"/>
    
  </entry>
  
  <entry>
    <title>deb  使用命令</title>
    <link href="https://note.batype.com/linux/install/deb.html"/>
    <id>https://note.batype.com/linux/install/deb.html</id>
    <published>2023-11-11T04:24:32.000Z</published>
    <updated>2024-01-08T02:06:24.707Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>使用dpkg命令：在终端中运行以下命令来安装.deb文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i &lt;filename&gt;.deb</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">使用dpkg命令：在终端中运行以下命令来安装.deb文件。</summary>
    
    
    
    <category term="前端" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="es6" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/es6/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Git" scheme="https://note.batype.com/tags/Git/"/>
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="deb" scheme="https://note.batype.com/tags/deb/"/>
    
  </entry>
  
  <entry>
    <title>ubantu use wechat</title>
    <link href="https://note.batype.com/linux/install/wechat.html"/>
    <id>https://note.batype.com/linux/install/wechat.html</id>
    <published>2023-11-11T04:24:32.000Z</published>
    <updated>2023-11-28T08:49:04.274Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install docker.io</span><br></pre></td></tr></table></figure><h3 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull bestwu/wechat</span><br></pre></td></tr></table></figure><h3 id="允许所有用户访问图形界面"><a href="#允许所有用户访问图形界面" class="headerlink" title="允许所有用户访问图形界面"></a>允许所有用户访问图形界面</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhost +</span><br></pre></td></tr></table></figure><p>注意，这条命令可能会提示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">access control disabled, clients can connect from any host</span><br></pre></td></tr></table></figure><p>看到这样的提示信息，表示命令执行成功，不是什么报错信息。</p><h3 id="创建Docker容器"><a href="#创建Docker容器" class="headerlink" title="创建Docker容器"></a>创建Docker容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name wechat\</span><br><span class="line">    --device /dev/snd\</span><br><span class="line">    --ipc=host\</span><br><span class="line">    -v /tmp/.X11-unix:/tmp/.X11-unix\</span><br><span class="line">    -v /home/batype/WeChatFiles:/WeChatFiles\</span><br><span class="line">    -v /home/batype:/batype\</span><br><span class="line">    -e DISPLAY=unix$DISPLAY\</span><br><span class="line">    -e XMODIFIERS=@im=fcitx\</span><br><span class="line">    -e QT_IM_MODULE=fcitx\</span><br><span class="line">    -e GTK_IM_MODULE=fcitx\</span><br><span class="line">    -e GID=`id -g`\</span><br><span class="line">    -e UID=`id -u`\</span><br><span class="line">    bestwu/wechat</span><br></pre></td></tr></table></figure><p>注意！注意！注意！上述代码不能直接使用，需要一定的修改！！！</p><ul><li><p>将代码中的batype改成自己的用户名！！！</p></li><li><p>如果你是ibus输入法，将代码中的fcitx改成ibus！！！</p></li></ul><h3 id="等待微信启动"><a href="#等待微信启动" class="headerlink" title="等待微信启动"></a>等待微信启动</h3><p>注意！！！当你执行完docker run之后，大约需要等待1-2分钟后，才会弹出微信的登录窗口。一定要有信心，有耐心，不要放弃，要耐心等待1-2分钟！</p><p>等待完成后，即可看到微信的登录界面，扫码登录即可尽情使用！</p><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><h4 id="微信的字体特别小"><a href="#微信的字体特别小" class="headerlink" title="微信的字体特别小"></a>微信的字体特别小</h4><p>安装完 Docker 微信后，字特别小，根本看不清，太费眼睛。</p><p>解决方法：</p><ol><li>进入容器内部</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it wechat bash</span><br></pre></td></tr></table></figure><ol start="2"><li>切换到wechat用户（此步骤不可省略，否则下面的步骤无法进行！！！）</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su wechat</span><br></pre></td></tr></table></figure><ol start="3"><li>打开配置</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WINEPREFIX=~/.deepinwine/Deepin-WeChat/ deepin-wine winecfg</span><br></pre></td></tr></table></figure><ol start="4"><li>在弹出窗口中，打开“显示”选项卡，找到最下面“屏幕分辨率”，改成200dpi即可。</li></ol><h4 id="运行微信之后，出现一个wine-system-tray的小窗口"><a href="#运行微信之后，出现一个wine-system-tray的小窗口" class="headerlink" title="运行微信之后，出现一个wine system tray的小窗口"></a>运行微信之后，出现一个wine system tray的小窗口</h4><p>这是wine的系统栏，是正常现象，其实可以把那个窗口关掉，没什么影响。</p><h4 id="我不小心把微信的窗口叉掉了，怎么办"><a href="#我不小心把微信的窗口叉掉了，怎么办" class="headerlink" title="我不小心把微信的窗口叉掉了，怎么办"></a>我不小心把微信的窗口叉掉了，怎么办</h4><p>执行下面命令即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart wechat -t 0</span><br></pre></td></tr></table></figure><h4 id="无法输入中文"><a href="#无法输入中文" class="headerlink" title="无法输入中文"></a>无法输入中文</h4><p>这是因为你使用的是ibus输入法，而你未将启动命令中的ibus改成fcitx。</p><h4 id="播放视频没有声音"><a href="#播放视频没有声音" class="headerlink" title="播放视频没有声音"></a>播放视频没有声音</h4><p>首先删掉容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f wechat</span><br></pre></td></tr></table></figure><p>然后重新运行一个</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name wechat\</span><br><span class="line">    --device /dev/snd\</span><br><span class="line">    --ipc=host\</span><br><span class="line">    -v /tmp/.X11-unix:/tmp/.X11-unix\</span><br><span class="line">    -v /home/batype/WeChatFiles:/WeChatFiles\</span><br><span class="line">    -v /home/batype:/batype\</span><br><span class="line">    -e DISPLAY=unix$DISPLAY\</span><br><span class="line">    -e XMODIFIERS=@im=fcitx\</span><br><span class="line">    -e QT_IM_MODULE=fcitx\</span><br><span class="line">    -e GTK_IM_MODULE=fcitx\</span><br><span class="line">    -e AUDIO_GID=`getent group audio | cut -d: -f3`\</span><br><span class="line">    -e GID=`id -g`\</span><br><span class="line">    -e UID=`id -u`\</span><br><span class="line">    bestwu/wechat</span><br></pre></td></tr></table></figure><p>注意，加了这一行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-e AUDIO_GID=`getent group audio | cut -d: -f3`\</span><br></pre></td></tr></table></figure><p>这样的话，播放视频就有声音了。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">ubantu use wechat, 使用的是模拟window环境打开wechat。</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="wechat" scheme="https://note.batype.com/categories/linux/wechat/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="wechat" scheme="https://note.batype.com/tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title>vscode . open project</title>
    <link href="https://note.batype.com/linux/use/vscode/open/project.html"/>
    <id>https://note.batype.com/linux/use/vscode/open/project.html</id>
    <published>2023-11-09T09:01:53.000Z</published>
    <updated>2023-11-28T08:49:04.280Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>You are trying to start Visual Studio Code as a super user which isn’t recommended. If this was i…</p><p>在centos7 中通过wget 安装vscode(tar.gz格式)后，执行&#x2F;bin&#x2F;code出现提示：</p><p>You are trying to start Visual Studio Code as a super user which isn’t recommended. If this was intended, please add the argument –no-sandbox and specify an alternate user data directory using the –user-data-dir argument.<br>您正试图以超级用户身份启动Visual Studio代码，这是不推荐的。如果是这样，请添加参数“–no sandbox”，并使用“–user data dir”参数指定备用用户数据目录。</p><p>解决方法：<br>方法一：修改 ~&#x2F;.bashrc</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bashrc</span><br></pre></td></tr></table></figure><p>添加一行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">whereis code </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">code: /usr/bin/code /usr/share/code</span></span><br><span class="line">alias code=&#x27;/usr/share/code/code . --no-sandbox --unity-launch&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">You are trying to start Visual Studio Code as a super user which isn&#39;t recommended. If this was i...</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="vscode" scheme="https://note.batype.com/categories/linux/vscode/"/>
    
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="vscode" scheme="https://note.batype.com/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>Git 使用</title>
    <link href="https://note.batype.com/linux/config/git.html"/>
    <id>https://note.batype.com/linux/config/git.html</id>
    <published>2023-11-07T13:40:32.000Z</published>
    <updated>2023-11-10T01:57:13.724Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>Git 是一个分布式版本控制系统，用于跟踪文件的变化并协作开发。以下是使用 Git 的基本步骤：</p><ol><li><p>安装 Git：首先，你需要在本地计算机上安装 Git。你可以从 Git 官方网站（<a href="https://git-scm.com/%EF%BC%89%E4%B8%8B%E8%BD%BD%E5%B9%B6%E6%8C%89%E7%85%A7%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E3%80%82">https://git-scm.com/）下载并按照安装指南进行安装。</a></p></li><li><p>创建一个 Git 仓库：进入你的项目文件夹，并使用以下命令初始化一个新的 Git 仓库：</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><ol start="3"><li>添加文件到暂存区：将需要进行版本控制的文件添加到 Git 的暂存区，使用以下命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add &lt;文件名&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>提交文件：将暂存区的文件提交到 Git 仓库，使用以下命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;提交说明&quot;</span><br></pre></td></tr></table></figure><ol start="5"><li>分支管理：</li></ol><p>Git 使用分支来管理不同的版本和功能。可以使用以下命令创建、切换、合并、暂存、还原暂存分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git branch          &lt;分支名&gt;        # 创建新分支</span><br><span class="line">git checkout        &lt;分支名&gt;        # 切换到分支</span><br><span class="line">git checkout -b     &lt;分支名&gt;        # 基于当前分支创建分支</span><br><span class="line">git merge           &lt;分支名&gt;        # 合并分支</span><br><span class="line">git branch                         # 查看分支列表</span><br><span class="line">git stash    save   &#x27;&#x27;             # 暂存分支</span><br><span class="line">git stash    pop                   # 恢复暂存：</span><br><span class="line">                                   # 恢复暂存的修改 这个指令将缓存堆栈中的第一个stash删除，并将对应修改应用到当前的工作目录下。</span><br></pre></td></tr></table></figure><ol start="6"><li>远程仓库：Git 还提供了远程仓库的功能，可以将本地仓库与远程仓库进行同步和协作。常用的远程仓库服务有 GitHub、GitLab 和 Bitbucket。可以使用以下命令与远程仓库进行交互：</li></ol><ul><li>添加远程仓库：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin &lt;远程仓库地址&gt;</span><br></pre></td></tr></table></figure><ul><li>将本地分支推送到远程仓库：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin &lt;分支名&gt;</span><br></pre></td></tr></table></figure><ul><li>将本地代码强制推送到远程仓库：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f || -force origin &lt;分支名&gt;</span><br></pre></td></tr></table></figure><ul><li>从远程仓库拉取最新代码：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin &lt;分支名&gt;</span><br></pre></td></tr></table></figure><p>这些是 Git 的基本用法，还有更多高级的用法和命令可以根据实际需要进行学习和掌握。你可以参考 Git 的官方文档或查找其他教程来深入了解 Git 的更多功能和用法。</p><ol start="7"><li>回退版本</li></ol><p>git reset 命令用于回退版本，可以指定退回某一次提交的版本。git reset 命令语法格式如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset [--soft | --mixed | --hard] [HEAD]</span><br></pre></td></tr></table></figure><ul><li>–mixed</li></ul><p>为默认，可以不用带该参数，用于重置暂存区的文件与上一次的提交(commit)保持一致，工作区文件内容保持不变。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD^                  # 回退所有内容到上一个版本</span><br><span class="line">git reset HEAD^ git_use.md       # 回退文件的版本到上一个版本</span><br><span class="line">git reset 0123adsfe3             # 回退到指定版本</span><br></pre></td></tr></table></figure><ul><li>–hard</li></ul><p>参数撤销工作区中所有未提交的修改内容，将暂存区与工作区都回到上一次版本，并删除之前的所有信息提交：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD             # 回退所有内容到上一个版本</span><br><span class="line">git reset --hard HEAD~3           # 回退上上上一个版本</span><br><span class="line">git reset –hard bae128            # 回退到某个版本回退点之前的所有信息</span><br><span class="line">git reset --hard origin/master    # 将本地的状态回退到和远程的一样</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="8"><li>删除本地和远程分支</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch  -d         &lt;分支名&gt;    # 删除本地</span><br><span class="line">git push    origin -d  &lt;分支名&gt;    # 删除远程分支</span><br></pre></td></tr></table></figure><ol start="9"><li>配置全局用户信息</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name   &quot;batype&quot;</span><br><span class="line">git config --global user.email  1175715363@qq.com</span><br></pre></td></tr></table></figure><ol start="10"><li>避免每次推送都输入密码</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure><ol start="11"><li>当前 Git 仓库关联的远程仓库的 URL配置</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git remote add     origin &lt;url&gt; # 添加 origin 地址</span><br><span class="line">git remote set-url origin &lt;url&gt; # 更新 origin 地址</span><br><span class="line">git remote get-url origin       # 获取 origin 地址</span><br><span class="line">git remote remove  origin       # 移除 origin 地址</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">Git 是一个分布式版本控制系统，用于跟踪文件的变化并协作开发。</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="git" scheme="https://note.batype.com/categories/linux/git/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Git" scheme="https://note.batype.com/tags/Git/"/>
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Docker 的安装和使用</title>
    <link href="https://note.batype.com/linux/install/docker.html"/>
    <id>https://note.batype.com/linux/install/docker.html</id>
    <published>2023-11-02T13:24:32.000Z</published>
    <updated>2023-11-28T08:49:04.270Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h4 id="Linux上安装Docker分为以下几步："><a href="#Linux上安装Docker分为以下几步：" class="headerlink" title="Linux上安装Docker分为以下几步："></a>Linux上安装Docker分为以下几步：</h4><ol><li>设置存储库。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br><span class="line"></span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>安装Docker引擎</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><ol start="3"><li>启动Docker</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><ol start="4"><li>设置docker开机自启动</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure><ol start="5"><li>配置镜像加速器</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://om7zpa5s.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="镜像命令"><a href="#镜像命令" class="headerlink" title="镜像命令"></a>镜像命令</h4><ol><li>查看</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><ol start="2"><li>搜索镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search mysql</span><br></pre></td></tr></table></figure><ol start="3"><li>下载镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:version</span><br></pre></td></tr></table></figure><ol start="4"><li>删除镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker images // 查看image ID</span><br><span class="line"></span><br><span class="line">docker rmi -f feb5d9fea6a5</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">多个删除</span></span><br><span class="line">docker rmi -f feb5d9fea6a5 feb5d9fea6a5 </span><br><span class="line">docker rmi -f $(docker images -aq)    # 删除全部的镜像</span><br></pre></td></tr></table></figure><h4 id="容器命令"><a href="#容器命令" class="headerlink" title="容器命令"></a>容器命令</h4><ol><li>新建容器并启动</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -it centos /bin/bash</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>列出所有运行的容器</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker ps </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">命令参数可选项</span></span><br><span class="line">-a        # 列出当前正在运行的容器+历史运行过的容器</span><br><span class="line">-n=?    # 显示最近创建的容器（可以指定显示几条，比如-n=1）</span><br><span class="line">-q        # 只显示容器的编号</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>退出容器</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exit        # 容器直接停止，并退出</span><br><span class="line">ctrl+P+Q    # 容器不停止，退出</span><br></pre></td></tr></table></figure><ol start="4"><li>删除容器</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器id                    # 删除容器（不能删除正在运行的容器）如果要强制删除：docker rm -f 容器id</span><br><span class="line">docker rm -f $(docker ps -aq)        # 删除全部容器</span><br><span class="line">docker ps -a -q|xargs docker rm        # 删除所有容器</span><br><span class="line">docker rm 656c03b3be05</span><br></pre></td></tr></table></figure><ol start="5"><li>启动和停止容器的操作</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker start 容器id # 启动容器</span><br><span class="line">docker restart 容器id # 重启</span><br><span class="line">docker stop 容器id # 停止</span><br><span class="line">docker kill 容器id # 强制停止</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="常用其他命令"><a href="#常用其他命令" class="headerlink" title="常用其他命令"></a>常用其他命令</h4><ol><li>后台启动容器</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d centos</span><br></pre></td></tr></table></figure><ol start="2"><li>查看日志</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker logs -tf 5694d2fc0a88</span><br><span class="line"></span><br><span class="line">docker run -d centos /bin/sh -c &quot;while true;do echo batype;sleep 1000;done&quot;</span><br></pre></td></tr></table></figure><ol start="3"><li>查看容器中的进程</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                   CREATED         STATUS         PORTS     NAMES</span><br><span class="line">4f9b77aafa46   centos    &quot;/bin/sh -c &#x27;while t…&quot;   6 seconds ago   Up 5 seconds             tender_hofstadter</span><br><span class="line"></span><br><span class="line">docker top 4f9b77aafa46</span><br><span class="line">UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD</span><br><span class="line">root                14087               14066               0                   17:42               ?                   00:00:00            /bin/sh -c while true;do echo batype;sleep 1000;done</span><br><span class="line">root                14107               14087               0                   17:42               ?                   00:00:00            /usr/bin/coreutils --coreutils-prog-shebang=sleep /usr/bin/sleep 1000</span><br></pre></td></tr></table></figure><ol start="4"><li>查看镜像的元数据</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">docker inspect 4f9b77aafa46</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Id&quot;: &quot;4f9b77aafa469b2e50ca296515d66b841f60f12343b1a45ddbdd09766e103d0f&quot;,</span><br><span class="line">        &quot;Created&quot;: &quot;2023-11-03T09:42:35.034147379Z&quot;,</span><br><span class="line">        &quot;Path&quot;: &quot;/bin/sh&quot;,</span><br><span class="line">        &quot;Args&quot;: [</span><br><span class="line">            &quot;-c&quot;,</span><br><span class="line">            &quot;while true;do echo batype;sleep 1000;done&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;State&quot;: &#123;</span><br><span class="line">            &quot;Status&quot;: &quot;running&quot;,</span><br><span class="line">            &quot;Running&quot;: true,</span><br><span class="line">            &quot;Paused&quot;: false,</span><br><span class="line">            &quot;Restarting&quot;: false,</span><br><span class="line">            &quot;OOMKilled&quot;: false,</span><br><span class="line">            &quot;Dead&quot;: false,</span><br><span class="line">            &quot;Pid&quot;: 14087,</span><br><span class="line">            &quot;ExitCode&quot;: 0,</span><br><span class="line">            &quot;Error&quot;: &quot;&quot;,</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ol start="5"><li>进入当前正在运行的容器</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ ~]# docker exec -it 4f9b77aafa46 /bin/bash</span><br><span class="line">[root@4f9b77aafa46 /]# ps =ef</span><br><span class="line">UID        PID  PPID  C STIME TTY          TIME CMD</span><br><span class="line">root         1     0  0 09:42 ?        00:00:00 /bin/sh -c while true;do echo batype;sleep 1000;done</span><br><span class="line">root        20     1  0 13:19 ?        00:00:00 /usr/bin/coreutils --coreutils-prog-shebang=sleep /usr/bin/sleep 1000</span><br><span class="line">root        21     0  0 13:30 pts/0    00:00:00 /bin/bash</span><br><span class="line">root        35    21  0 13:31 pts/0    00:00:00 ps -ef</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="6"><li>从容器拷贝文件到主机</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">docker cp 容器id:容器内路径 目的主机的路径</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ ~]# cd /home/</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ home]# ls</span><br><span class="line">html</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ home]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                  CREATED       STATUS       PORTS     NAMES</span><br><span class="line">4f9b77aafa46   centos    &quot;/bin/sh -c &#x27;while t…&quot;   4 hours ago   Up 4 hours             tender_hofstadter</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ home]# docker exec -it 4f9b77aafa46 /bin/bash</span><br><span class="line">[root@4f9b77aafa46 /]# ls</span><br><span class="line">bin  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var</span><br><span class="line">[root@4f9b77aafa46 /]# cd /home/</span><br><span class="line">[root@4f9b77aafa46 home]# ls</span><br><span class="line">[root@4f9b77aafa46 home]# touch test.java</span><br><span class="line">[root@4f9b77aafa46 home]# ls</span><br><span class="line">test.java</span><br><span class="line">[root@4f9b77aafa46 home]# exit</span><br><span class="line">exit</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ home]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                  CREATED       STATUS       PORTS     NAMES</span><br><span class="line">4f9b77aafa46   centos    &quot;/bin/sh -c &#x27;while t…&quot;   4 hours ago   Up 4 hours             tender_hofstadter</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ home]# docker cp 4f9b77aafa46:/home/test.java /home</span><br><span class="line">Successfully copied 1.54kB to /home</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ home]# ls</span><br><span class="line">html  test.java</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝是一个手动过程，未来我们使用 -v 卷的技术，可以实现，自动同步（容器内的/home路径和主机上的/home路径打通）</span></span><br></pre></td></tr></table></figure><h4 id="练习安装Nginx"><a href="#练习安装Nginx" class="headerlink" title="练习安装Nginx"></a>练习安装Nginx</h4><ol><li><p>搜索镜像：docker search nginx (建议去dockerHub上去搜索)</p></li><li><p>下载镜像：docker pull nginx</p></li><li><p>启动镜像</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ home]# docker pull nginx</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/nginx</span><br><span class="line">Digest:</span><br><span class="line">sha256:0d17b565c37bcbd895e9d92315a05c1c3c9a29f762b011a10c54a66cd53c9b31</span><br><span class="line">Status: Downloaded newer image for nginx:latest</span><br><span class="line">docker.io/library/nginx:latest</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-d 后台运行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--name=<span class="string">&quot;nginx01&quot;</span>    给容器命名</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-p 宿主机端口:容器内部端口</span></span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ home]# docker run -d --name nginx01 -p 515:80 nginx</span><br><span class="line">614bbf44138a3e834008f5a33a71194c8e78d7f0e53bccbdfc4c9c9f0c0501cb</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ home]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS         PORTS                                 NAMES</span><br><span class="line">614bbf44138a   nginx     &quot;/docker-entrypoint.…&quot;   8 seconds ago   Up 7 seconds   0.0.0.0:515-&gt;80/tcp, :::515-&gt;80/tcp   nginx01</span><br><span class="line">4f9b77aafa46   centos    &quot;/bin/sh -c &#x27;while t…&quot;   4 hours ago     Up 4 hours                                           tender_hofstadter</span><br></pre></td></tr></table></figure><ol start="4"><li>测试访问</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">访问指向端口515</span></span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ home]# curl 0.0.0.0:515</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">html &#123; color-scheme: light dark; &#125;</span><br><span class="line">body &#123; width: 35em; margin: 0 auto;</span><br><span class="line">font-family: Tahoma, Verdana, Arial, sans-serif; &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;For online documentation and support please refer to</span><br><span class="line">&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">Commercial support is available at</span><br><span class="line">&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="可视化工具"><a href="#可视化工具" class="headerlink" title="可视化工具"></a>可视化工具</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ ~]# docker run -d -p 8088:9000 --restart=always -v /var/run/docker.sock:/var/run/docker.sock --privileged=true portainer/portainer</span><br><span class="line">Unable to find image &#x27;portainer/portainer:latest&#x27; locally</span><br><span class="line">latest: Pulling from portainer/portainer</span><br><span class="line"></span><br><span class="line">Digest:</span><br><span class="line">  sha256:fb45b43738646048a0a0cc74fcee2865b69efde857e710126084ee5de9be0f3f</span><br><span class="line">Status: Downloaded newer image for portainer/portainer:latest</span><br><span class="line">a1b1156666edf6cad33eb299e35f543b823673a97a9756726d1fbc2cc571bc47</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ ~]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE                 COMMAND                  CREATED         STATUS         PORTS                                       NAMES</span><br><span class="line">a1b1156666ed   portainer/portainer   &quot;/portainer&quot;             8 seconds ago   Up 7 seconds   0.0.0.0:8088-&gt;9000/tcp, :::8088-&gt;9000/tcp   dreamy_goodall</span><br><span class="line">614bbf44138a   nginx                 &quot;/docker-entrypoint.…&quot;   8 minutes ago   Up 8 minutes   0.0.0.0:515-&gt;80/tcp, :::515-&gt;80/tcp         nginx01</span><br><span class="line">4f9b77aafa46   centos                &quot;/bin/sh -c &#x27;while t…&quot;   4 hours ago     Up 4 hours                                                 tender_hofstadter</span><br></pre></td></tr></table></figure><ol start="2"><li>测试访问</li></ol><p><a href="http://www.batype.com:8088/">http://www.batype.com:8088/</a></p><ol><li><p>连接本地Local<br><img src="https://pic.imgdb.cn/item/6545012dc458853aefeef057.jpg" alt="Connect Portainer"></p></li><li><p>进入之的连接页面<br><img src="https://pic.imgdb.cn/item/654505fec458853aef03e9b1.jpg" alt="进入之的连接页面"></p></li></ol><h4 id="commit镜像"><a href="#commit镜像" class="headerlink" title="commit镜像"></a>commit镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交容器成为一个新的副本</span></span><br><span class="line">docker commit</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">命令和git原理类似</span></span><br><span class="line">docker commit -m=&quot;提交的描述信息&quot; -a=&quot;作者&quot; 容器id 目标镜像名:[TAG]</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ ~]# docker commit -a=&quot;batype&quot; -m=&quot;test&quot; 614bbf44138a nginx001:18.16.0</span><br><span class="line">sha256:7fcdd59c72c118bccfc2a6d94953e7d18d4a1afadeea0eee304117e917f0aabe</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ ~]# docker images</span><br><span class="line">REPOSITORY            TAG       IMAGE ID       CREATED          SIZE</span><br><span class="line">nginx001              18.16.0   7fcdd59c72c1   12 seconds ago   141MB</span><br><span class="line">nginx                 latest    605c77e624dd   22 months ago    141MB</span><br><span class="line">mysql                 latest    3218b38490ce   22 months ago    516MB</span><br><span class="line">centos                latest    5d0da3dc9764   2 years ago      231MB</span><br><span class="line">portainer/portainer   latest    580c0e4e98b0   2 years ago      79.1MB</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ ~]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE                 COMMAND                  CREATED             STATUS             PORTS                                       NAMES</span><br><span class="line">a1b1156666ed   portainer/portainer   &quot;/portainer&quot;             About an hour ago   Up About an hour   0.0.0.0:8088-&gt;9000/tcp, :::8088-&gt;9000/tcp   dreamy_goodall</span><br><span class="line">614bbf44138a   nginx                 &quot;/docker-entrypoint.…&quot;   About an hour ago   Up About an hour   0.0.0.0:515-&gt;80/tcp, :::515-&gt;80/tcp         nginx01</span><br><span class="line">4f9b77aafa46   centos                &quot;/bin/sh -c &#x27;while t…&quot;   5 hours ago         Up 5 hours                                                     tender_hofstadter</span><br></pre></td></tr></table></figure><h3 id="容器数据卷"><a href="#容器数据卷" class="headerlink" title="容器数据卷"></a>容器数据卷</h3><h4 id="什么是容器数据卷？"><a href="#什么是容器数据卷？" class="headerlink" title="什么是容器数据卷？"></a>什么是容器数据卷？</h4><p>Docker容器数据卷，即Docker Volume（卷）。</p><p>当Docker容器运行的时候，会产生一系列的数据文件，这些数据文件会在关闭Docker容器时，直接消失的。但是其中产生部分的数据内容，我们是希望能够把它给保存起来，另作它用的。</p><p>关闭Docker容器&#x3D;删除内部除了image底层数据的其他全部内容，即删库跑路</p><p>所以我们期望：</p><p>将应用与运行的环境打包形成容器运行，伴随着容器运行产生的数据，我们希望这些数据能够持久化。<br>希望容器之间也能够实现数据的共享、</p><p>Docker容器产生的数据同步到本地,这样关闭容器的时候，数据是在本地的，不会影响数据的安全性。<br>docker的容器卷技术也就是将容器内部目录和本地目录进行一个同步，即挂载。</p><h4 id="使用数据卷"><a href="#使用数据卷" class="headerlink" title="使用数据卷"></a>使用数据卷</h4><p>主机目录和容器内的目录是映射关系</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v 主机目录:容器内目录 镜像名 /bin/bash</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">测试，查看容器信息</span></span><br><span class="line">docker inspect 容器id</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/654510aac458853aef35e748.jpg"></p><p>停止容器后，在主机的&#x2F;home&#x2F;ceshi文件夹下，修改文件或新增文件，启动容器，查看容器的&#x2F;home文件夹，发现容器内的数据依旧是同步的</p><ul><li>停止容器。</li><li>宿主机上修改文件。</li><li>启动容器。</li><li>容器内的数据依旧是同步的。</li></ul><h4 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h4><p><img src="https://pic.imgdb.cn/item/65451200c458853aef3c1f3c.jpg"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取镜像</span></span><br><span class="line">docker pull mysql:5.7</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行容器，需要做数据目录挂载。（安装启动mysql，注意：需要配置密码）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">官方启动mysql</span></span><br><span class="line">docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my123456 -d mysql:5.7</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置启动并同步数据</span></span><br><span class="line">docker run -d -p 8081:3306 -v /home/mysql/conf.d:/etc/mysql/conf.d -v /home/mysql/mysql.conf.d:/etc/mysql/mysql.conf.d -v /home/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=weiliao&amp;666 --name mysql01 mysql:5.7</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="匿名挂载和具名挂载"><a href="#匿名挂载和具名挂载" class="headerlink" title="匿名挂载和具名挂载"></a>匿名挂载和具名挂载</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如何确定是具名挂载，还是匿名挂载，还是指定路径挂载</span></span><br><span class="line">-v 容器内的路径                # 匿名挂载</span><br><span class="line">-v 卷名:容器内的路径        # 具名挂载</span><br><span class="line">-v /宿主机路径:容器内路径    # 指定路径挂载</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">具名挂载</span></span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ mysql]# docker run -d -p 3344:80 --name nginx02 -v juming-nginx:/etc/nginx nginx</span><br><span class="line">7cd90c3b2f02f9b84e0dd659f0c8179d777b3c9b6c95e11da4db8a7831d0923e</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ mysql]# docker volume ls</span><br><span class="line">DRIVER    VOLUME NAME</span><br><span class="line">local     cffb5d0a4839c2deff3d4c3fde9b86795632dd3ee42e256daf68fa3a33d888fd</span><br><span class="line">local     f9515933a80fac5357c7b26742d5870471ae5b21dcef34a79b60e2cc70a4c288</span><br><span class="line">local     juming-nginx</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">匿名挂载</span></span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ mysql]# docker run -d --name nginx03 -v /etc/nginx nginx</span><br><span class="line">c27103b64da61544a65037ae16441f2b1ffe6f02ce0729768724752d8c4751f1</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ mysql]# docker volume ls</span><br><span class="line">DRIVER    VOLUME NAME</span><br><span class="line">local     3303ec682317c64c023983cc615fa0db5cd6a88b77c4f7361d2594bc68618961</span><br><span class="line">local     cffb5d0a4839c2deff3d4c3fde9b86795632dd3ee42e256daf68fa3a33d888fd</span><br><span class="line">local     f9515933a80fac5357c7b26742d5870471ae5b21dcef34a79b60e2cc70a4c288</span><br><span class="line">local     juming-nginx</span><br></pre></td></tr></table></figure><p><strong>拓展</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过 -v 容器内的路径:ro    rw    改变读写权限</span></span><br><span class="line">ro    read only    # 只读</span><br><span class="line">rw    read write    # 可读可写</span><br><span class="line">docker run -d -p 3345:80 --name nginx02 -v juming-nginx:/etc/nginx:rw nginx</span><br><span class="line">docker run -d -p 3345:80 --name nginx02 -v juming-nginx:/etc/nginx:rw nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h4><p>dockerfile 就是用来构建 docker 镜像的构建文件。    命令脚本！</p><p>通过这个脚本可以生成镜像，镜像是一层一层的，脚本一个一个的命令，每个命令都是一层！</p><ol><li>创建一个名为dockerfile 的文件</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM centos</span><br><span class="line">VOLUME [&quot;volume01&quot;, &quot;volume02&quot;]</span><br><span class="line">CMD echo &quot;-----end-----&quot;</span><br><span class="line">CMD /bin/bash</span><br></pre></td></tr></table></figure><ol start="2"><li>编译</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f ./dockerfile_songs_note -t songs_note.centos:1.0 .</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/6545ab56c458853aef9204f3.jpg"></p><ol start="3"><li>启动容器</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it 5f6352c38230 /bin/bash</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">图形选中的就是匿名挂载</span></span><br><span class="line">VOLUME [&quot;volume01&quot;, &quot;volume02&quot;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/6545ac56c458853aef949ef9.jpg"></p><ol start="4"><li>查看一下卷挂载的路径：docker inspect 容器id</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect 95ab48f7bf47</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/6545ad0ac458853aef967f53.jpg"></p><h4 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h4><p>多个容器同步数据（临时认父）</p><p>将两个容器或者更多容器之间的数据进行数据共享</p><ol><li>启动3个容器</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d --name docker01 songs_note.centos:1.0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入容器创建test.js 文件</span></span><br><span class="line">docker run -it -d --name docker02 --volumes-from docker01 songs_note.centos:1.0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入容器创建test1.js 文件</span></span><br><span class="line">docker run -it -d --name docker03 --volumes-from docker01 songs_note.centos:1.0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入容器创建test2.js 文件</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入 容器docker01查看</span></span><br><span class="line">[root@ab2fb91dd8c5 volume01]# ls</span><br><span class="line">test.js  test1.js  test2.js</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除某一个容器</span></span><br><span class="line"> [root@iZ2vc7kou0oyoo6bt2y0lcZ ~]# docker rm -f f0305bd4a916</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看其他容器文件是否还在</span></span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ ~]# docker exec -it 1c7a3dbaf54e /bin/bash</span><br><span class="line">[root@1c7a3dbaf54e /]# cd volume01</span><br><span class="line">[root@1c7a3dbaf54e volume01]# ls</span><br><span class="line">test.js  test1.js  test2.js</span><br></pre></td></tr></table></figure><ol start="2"><li>多个mysql实现数据共享</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ ~]# docker run -d -p 7777:3306 -v /home/mysql/conf:/etc mysql/conf.d -v /home/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name mysql01 mysql:5.7</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ ~]# docker run -d -p 7777:3306 -e MYSQL_ROOT_PASSWORD=123456 --name mysql02 --volumes-from mysql01 mysql:5.7</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>结论</strong>：<br>容器之间配置信息的传递，数据卷容器的生命同期一直持续到没有容器使用为止。<br>但是一旦你持久化到了本地，这个时候，本地的数据是不会删除的！</p><h3 id="DockerFile"><a href="#DockerFile" class="headerlink" title="DockerFile"></a>DockerFile</h3><h4 id="什么是DockerFile-？"><a href="#什么是DockerFile-？" class="headerlink" title="什么是DockerFile ？"></a>什么是DockerFile ？</h4><p>dockerfile是用来构建docker镜像的文件！命令参数脚本！</p><p><strong>构建步骤</strong>：</p><ol><li>编写一个dockerfile文件</li><li>docker build 构建成为一个镜像</li><li>docker run运行镜像</li><li>docker push发布镜像（DockerHub、阿里云镜像仓库！）</li></ol><h4 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h4><ol><li>每个保留关键字（指令）都是必须是大写字母</li><li>执行从上到下顺序执行</li><li>‘#’ 表示注释</li><li>每一个指令都会创建提交一个新的镜像层，并提交！</li></ol><p>dockerfile是面向开发的，我们以后要发布项目，做镜像，就需要编写dockerfile文件，这个文件十分简单！</p><p>DockerFile：构建文件，定义了一切的步骤，源代码。<br>Dockerlmages：通过DockerFile构建生成的镜像，最终发布和运行的产品。<br>Docker容器：容器就是镜像运行起来提供服务的。</p><h4 id="DockerFile的命令"><a href="#DockerFile的命令" class="headerlink" title="DockerFile的命令"></a>DockerFile的命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FROM         # 基础镜像，一起从这里开始构建</span><br><span class="line">MAINTAINER   # 镜像作者：姓名-邮箱</span><br><span class="line">RUN          # 镜像构建的时候需要运行的命令</span><br><span class="line">ADD          # 步骤：tomcat镜像，这个tomcat压缩包！添加内容</span><br><span class="line">WORKDIR      # 镜像的工作目录</span><br><span class="line">VOLUME       # 挂载的目录</span><br><span class="line">EXPOSE       # 暴露端口配置</span><br><span class="line">CMD          # 指定这个容器启动的时候要运行的命令，只有最后一个会生效，可被替代</span><br><span class="line">ENTRYPOINT   # 指定这个容器启动的时候要运行的命令，可以追加命令</span><br><span class="line">ONBUILD      # 当构建一个被继承DockerFile 这个时候就会运行ONBUILD 的指令，触发指令。</span><br><span class="line">CPOY         # 类似ADD，将我们的文件拷贝到镜像中</span><br><span class="line">ENV          # 构建的时候设置环境变量！</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><ol><li>编写dockerfile的文件</li></ol><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos:latest</span><br><span class="line"><span class="keyword">MAINTAINER</span> batye&lt;<span class="number">1175715363</span>@qq.com&gt;</span><br><span class="line"><span class="keyword">ENV</span> MYPATH /usr/local</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> <span class="variable">$MYPATH</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> yum -y install vim</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> yum -y install net-tools</span></span><br><span class="line">EXPOST <span class="number">8001</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> <span class="built_in">echo</span> <span class="variable">$MYPATH</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&quot;----end----&quot;</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> /bin/bash</span></span><br></pre></td></tr></table></figure><ol start="2"><li>构建文件镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f dockerFile_test -t vim.centos:0.0.1 .</span><br></pre></td></tr></table></figure><ol start="3"><li>原生contos7</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ dockerfile]# docker run -it centos</span><br><span class="line">[root@566d6bd3f48d /]# pwd</span><br><span class="line">/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">工作目录为根目录</span></span><br><span class="line">[root@566d6bd3f48d /]# vim</span><br><span class="line">bash: vim: command not found</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">没有vim 工具</span></span><br><span class="line">[root@566d6bd3f48d /]# exit</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><ol start="4"><li>vim.centos增加配置以后的镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ dockerfile]# docker run -it vim.centos:0.0.1</span><br><span class="line">[root@53bfee4c6557 local]# pwd</span><br><span class="line">/usr/local</span><br><span class="line">[root@53bfee4c6557 local]# vim</span><br><span class="line"></span><br><span class="line">[root@53bfee4c6557 local]# ifconfig</span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.17.0.5  netmask 255.255.0.0  broadcast 172.17.255.255</span><br><span class="line">        ether 02:42:ac:11:00:05  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 8  bytes 656 (656.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">[root@53bfee4c6557 local]# exit</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><ol start="5"><li>列出本地进行的变更历史</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker history 692aba72d901</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/6545f262c458853aef77e132.jpg" alt="docker history 692aba72d901"></p><ol start="6"><li>CMD和ENTRYPOINT区别</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CMD            # 指定这个容器启动的时候要运行的命令，只有最后一个会生效，可被替代</span><br><span class="line">ENTRYPOINT     # 指定这个容器启动的时候要运行的命令，可以追加命令</span><br></pre></td></tr></table></figure><ul><li><p>测试CMD</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 编写dockerfile文件</span></span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ dockerfile]# vim dockerfile-cmd-test</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ dockerfile]# cat dockerfile-cmd-test</span><br><span class="line">FROM centos:7</span><br><span class="line">CMD [&quot;ls&quot;,&quot;-a&quot;]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 构建镜像</span></span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ dockerfile]# docker build -f dockerfile-cmd-test -t cmdtest .</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3. run运行，发现我们的<span class="string">&quot;ls -a&quot;</span>命令生效、执行</span></span><br><span class="line">docker run 06f2cc65ea4a</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run 06f2cc65ea4a </span><br></pre></td></tr></table></figure><p>  <img src="https://pic.imgdb.cn/item/6545f420c458853aef7e35a4.jpg" alt="docker run 06f2cc65ea4a "></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4. 我们先追加一个命令<span class="string">&quot;l&quot;</span>,构成<span class="string">&quot;ls -al&quot;</span>命令，发现报错</span></span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ dockerfile]# docker run ec0d2dd226b3 -l</span><br><span class="line">docker: Error response from daemon: failed to create task for container: failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: exec: &quot;-l&quot;: executable file not found in $PATH: unknown.</span><br><span class="line">ERRO[0000] error waiting for container:</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">原因：CMD命令的情况下，<span class="string">&quot;-l&quot;</span>替换了CMD[<span class="string">&quot;1s&quot;</span>，<span class="string">&quot;-a&quot;</span>]命令，因为<span class="string">&quot;-l&quot;</span>不是命令，所以报错！</span></span><br></pre></td></tr></table></figure></li><li><p>测试ENTRYPOINT</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 编写dockerfile文件</span></span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ dockerfile]# vim dockerfile-entrypoint-test</span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ dockerfile]# cat dockerfile-entrypoint-test</span><br><span class="line">FROM centos:7</span><br><span class="line">ENTRYPOINT [&quot;ls&quot;,&quot;-a&quot;]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 构建镜像</span></span><br><span class="line">[root@iZ2vc7kou0oyoo6bt2y0lcZ dockerfile]# docker build -f dockerfile-entrypoint-test -t entrypointtest .</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3. run运行，发现我们的<span class="string">&quot;ls -a&quot;</span>命令生效、执行</span></span><br><span class="line">docker run 5184c7d459a0</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/6545fc1bc458853aef99f91e.jpg" alt="docker run 5184c7d459a0"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run 5184c7d459a0 -l</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/6545fb94c458853aef982c74.jpg" alt="docker run 5184c7d459a0 -l"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">原因：ENTRYPOINT命令的情况下，<span class="string">&quot;-l&quot;</span>追加在ENTRYPOINT [<span class="string">&quot;1s&quot;</span>，<span class="string">&quot;-a&quot;</span>]命令后面，得到<span class="string">&quot;ls -al&quot;</span>的命令，所以命令正常执行！</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">（我们的追加命令，是直接拼接在我们的ENTRYPOINT命令的后面）</span></span><br></pre></td></tr></table></figure></li></ul></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">当Docker容器运行的时候，会产生一系列的数据文件，这些数据文件会在关闭Docker容器时，直接消失的。但是其中产生部分的数据内容，我们是希望能够把它给保存起来，另作它用的。。</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="docker" scheme="https://note.batype.com/categories/linux/docker/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="docker" scheme="https://note.batype.com/tags/docker/"/>
    
  </entry>
  
</feed>
