<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>batype-note</title>
  
  
  <link href="https://note.batype.com/atom.xml" rel="self"/>
  
  <link href="https://note.batype.com/"/>
  <updated>2024-03-12T10:12:06.729Z</updated>
  <id>https://note.batype.com/</id>
  
  <author>
    <name>songshao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>对象部分属性只读 Readonly</title>
    <link href="https://note.batype.com/typescript/questions/Readonly2.html"/>
    <id>https://note.batype.com/typescript/questions/Readonly2.html</id>
    <published>2024-03-12T10:09:48.117Z</published>
    <updated>2024-03-12T10:12:06.729Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>实现一个泛型<code>MyReadonly2&lt;T, K&gt;</code>，它带有两种类型的参数<code>T</code>和<code>K</code>。</p><p>类型 <code>K</code> 指定 <code>T</code> 中要被设置为只读 (readonly) 的属性。如果未提供<code>K</code>，则应使所有属性都变为只读，就像普通的<code>Readonly&lt;T&gt;</code>一样。</p><p>例如</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Todo</span> &#123;</span><br><span class="line"><span class="attr">title</span>: <span class="built_in">string</span></span><br><span class="line"><span class="attr">description</span>: <span class="built_in">string</span></span><br><span class="line"><span class="attr">completed</span>: <span class="built_in">boolean</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">todo</span>: <span class="title class_">MyReadonly2</span>&lt;<span class="title class_">Todo</span>, <span class="string">&#x27;title&#x27;</span> | <span class="string">&#x27;description&#x27;</span>&gt; = &#123;</span><br><span class="line"><span class="attr">title</span>: <span class="string">&quot;Hey&quot;</span>,</span><br><span class="line"><span class="attr">description</span>: <span class="string">&quot;foobar&quot;</span>,</span><br><span class="line"><span class="attr">completed</span>: <span class="literal">false</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">todo.<span class="property">title</span> = <span class="string">&quot;Hello&quot;</span> <span class="comment">// Error: cannot reassign a readonly property</span></span><br><span class="line">todo.<span class="property">description</span> = <span class="string">&quot;barFoo&quot;</span> <span class="comment">// Error: cannot reassign a readonly property</span></span><br><span class="line">todo.<span class="property">completed</span> = <span class="literal">true</span> <span class="comment">// OK</span></span><br></pre></td></tr></table></figure><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><p>先取出需要 <code>readonly</code> 参数，然后在把不需要声明的参数用排除法加上。 </p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">MyReadonly2</span>&lt;T, D <span class="keyword">extends</span> keyof T&gt; = &#123;</span><br><span class="line">    <span class="keyword">readonly</span> [P <span class="keyword">in</span> D]: T[P];</span><br><span class="line">&#125; &amp; &#123;</span><br><span class="line">    [P <span class="keyword">in</span> keyof T <span class="keyword">as</span> P <span class="keyword">extends</span> D ? <span class="built_in">never</span> : P]: T[P];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">实现一个泛型`MyReadonly2&lt;T, K&gt;`，它带有两种类型的参数`T`和`K`。</summary>
    
    
    
    <category term="前端" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/type/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/tags/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/tags/type/"/>
    
  </entry>
  
  <entry>
    <title>对象属性只读 Readonly</title>
    <link href="https://note.batype.com/typescript/questions/Readonly.html"/>
    <id>https://note.batype.com/typescript/questions/Readonly.html</id>
    <published>2024-03-11T06:06:02.288Z</published>
    <updated>2024-03-11T06:09:33.577Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>不要使用内置的<code>Readonly&lt;T&gt;</code>，自己实现一个。</p><p>泛型 <code>Readonly&lt;T&gt;</code> 会接收一个 _泛型参数_，并返回一个完全一样的类型，只是所有属性都会是只读 (readonly) 的。</p><p>也就是不可以再对该对象的属性赋值。</p><p>例如：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Todo</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">todo</span>: <span class="title class_">MyReadonly</span>&lt;<span class="title class_">Todo</span>&gt; = &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;Hey&quot;</span>,</span><br><span class="line">  <span class="attr">description</span>: <span class="string">&quot;foobar&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">todo.<span class="property">title</span> = <span class="string">&quot;Hello&quot;</span> <span class="comment">// Error: cannot reassign a readonly property</span></span><br><span class="line">todo.<span class="property">description</span> = <span class="string">&quot;barFoo&quot;</span> <span class="comment">// Error: cannot reassign a readonly property</span></span><br></pre></td></tr></table></figure><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">MyReadonly</span>&lt;T&gt; = &#123;</span><br><span class="line"><span class="keyword">readonly</span> [P <span class="keyword">in</span> keyof T]: T[P];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">不要使用内置的`Readonly&lt;T&gt;`，自己实现一个。</summary>
    
    
    
    <category term="前端" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/type/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/tags/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/tags/type/"/>
    
  </entry>
  
  <entry>
    <title>实现类似Vue的类型支持的简化版本</title>
    <link href="https://note.batype.com/typescript/questions/SimpleVue.html"/>
    <id>https://note.batype.com/typescript/questions/SimpleVue.html</id>
    <published>2024-03-11T03:29:01.008Z</published>
    <updated>2024-03-11T03:31:12.644Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>实现类似Vue的类型支持的简化版本。</p><p>通过提供一个函数<code>SimpleVue</code>（类似于<code>Vue.extend</code>或<code>defineComponent</code>），它应该正确地推断出 computed 和 methods 内部的<code>this</code>类型。</p><p>在此挑战中，我们假设<code>SimpleVue</code>接受只带有<code>data</code>，<code>computed</code>和<code>methods</code>字段的Object作为其唯一的参数，</p><ul><li><p><code>data</code>是一个简单的函数，它返回一个提供上下文<code>this</code>的对象，但是你无法在<code>data</code>中获取其他的计算属性或方法。</p></li><li><p><code>computed</code>是将<code>this</code>作为上下文的函数的对象，进行一些计算并返回结果。在上下文中应暴露计算出的值而不是函数。</p></li><li><p><code>methods</code>是函数的对象，其上下文也为<code>this</code>。函数中可以访问<code>data</code>，<code>computed</code>以及其他<code>methods</code>中的暴露的字段。 <code>computed</code>与<code>methods</code>的不同之处在于<code>methods</code>在上下文中按原样暴露为函数。</p></li></ul><p><code>SimpleVue</code>的返回值类型可以是任意的。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> instance = <span class="title class_">SimpleVue</span>(&#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">firstname</span>: <span class="string">&#x27;Type&#x27;</span>,</span><br><span class="line">      <span class="attr">lastname</span>: <span class="string">&#x27;Challenges&#x27;</span>,</span><br><span class="line">      <span class="attr">amount</span>: <span class="number">10</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">computed</span>: &#123;</span><br><span class="line">    <span class="title function_">fullname</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstname</span> + <span class="string">&#x27; &#x27;</span> + <span class="variable language_">this</span>.<span class="property">lastname</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">hi</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">fullname</span>.<span class="title function_">toLowerCase</span>())</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">DataType</span>&lt;T&gt; = T <span class="keyword">extends</span> &#123; <span class="title function_">data</span>(): infer D &#125; ? D : <span class="built_in">never</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">ComputedType</span>&lt;T, D&gt; = T <span class="keyword">extends</span> &#123; <span class="attr">computed</span>: infer C &#125;</span><br><span class="line">? &#123;</span><br><span class="line">    [K <span class="keyword">in</span> keyof C]: C[K] <span class="keyword">extends</span> (<span class="attr">this</span>: D) =&gt; infer R ? R : <span class="built_in">never</span>;</span><br><span class="line">    &#125;</span><br><span class="line">: &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">MethodsType</span>&lt;T, D, C&gt; = T <span class="keyword">extends</span> &#123; <span class="attr">methods</span>: infer M &#125;</span><br><span class="line">? &#123;</span><br><span class="line">    [K <span class="keyword">in</span> keyof M]: M[K] <span class="keyword">extends</span> (<span class="attr">this</span>: D &amp; C) =&gt; infer R ? R : <span class="built_in">never</span>;</span><br><span class="line">    &#125;</span><br><span class="line">: &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> <span class="keyword">function</span> <span class="title class_">SimpleVue</span>&lt;T&gt;(<span class="attr">options</span>: T): &#123;</span><br><span class="line"><span class="attr">data</span>: <span class="title class_">DataType</span>&lt;T&gt;;</span><br><span class="line"><span class="attr">computed</span>: <span class="title class_">ComputedType</span>&lt;T, <span class="title class_">DataType</span>&lt;T&gt;&gt;;</span><br><span class="line"><span class="attr">methods</span>: <span class="title class_">MethodsType</span>&lt;T, <span class="title class_">DataType</span>&lt;T&gt;, <span class="title class_">ComputedType</span>&lt;T, <span class="title class_">DataType</span>&lt;T&gt;&gt;&gt;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">通过提供一个函数`SimpleVue`（类似于`Vue.extend`或`defineComponent`），它应该正确地推断出 computed 和 methods 内部的`this`类型。</summary>
    
    
    
    <category term="前端" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/type/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/tags/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/tags/type/"/>
    
  </entry>
  
  <entry>
    <title>获取只读属性 GetReadonlyKeys</title>
    <link href="https://note.batype.com/typescript/questions/GetReadonlyKeys.html"/>
    <id>https://note.batype.com/typescript/questions/GetReadonlyKeys.html</id>
    <published>2024-03-11T02:10:43.733Z</published>
    <updated>2024-03-11T02:15:53.532Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>实现泛型<code>GetReadonlyKeys&lt;T&gt;</code>，<code>GetReadonlyKeys&lt;T&gt;</code>返回由对象 T 所有只读属性的键组成的联合类型。</p><p>例如</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Todo</span> &#123;</span><br><span class="line">  <span class="keyword">readonly</span> <span class="attr">title</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="keyword">readonly</span> <span class="attr">description</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">completed</span>: <span class="built_in">boolean</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Keys</span> = <span class="title class_">GetReadonlyKeys</span>&lt;<span class="title class_">Todo</span>&gt; <span class="comment">// expected to be &quot;title&quot; | &quot;description&quot;</span></span><br></pre></td></tr></table></figure><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><ol><li>映射类型：</li></ol><ul><li>使用了映射类型语法 <code>[P in keyof T]</code>，遍历 <code>T</code> 类型的所有键（包括公共和私有属性以及方法）。</li></ul><ol start="2"><li>条件类型与函数类型比较：</li></ol><ul><li>对于每个键 <code>P</code>，创建一个返回值为布尔类型的匿名函数类型 <code>&lt;I&gt;() =&gt; ...</code>。</li><li>第一个函数类型检查是否有一个对象类型，其具有属性 <code>I</code> 等于 <code>T[P]</code> 的类型，这实际上是为了确保当前键 <code>P</code> 的存在性。</li><li>第二个函数类型则检查是否有只读版本的对象类型，其中属性 I 是只读的且类型为 <code>T[P]</code>。</li></ul><ol start="3"><li>条件判断：</li></ol><ul><li>判断第一个函数类型是否能赋值给第二个函数类型，即判断 <code>T[P]</code> 是否是一个只读属性。</li><li>如果是，则结果为 <code>P</code>，表示该键 <code>P</code> 是只读属性。</li><li>否则，结果为 <code>never</code>，表示该键不是只读属性。</li></ul><ol start="4"><li>取可读属性键集合：</li></ol><ul><li>最终通过 <code>keyof</code> 运算符从映射类型中提取所有满足上述条件（即为只读属性）的键 <code>P</code> 构成的联合类型。</li></ul><ol start="5"><li>默认值<code>never</code>：</li></ol><ul><li>如果没有符合条件的只读属性，则整个映射类型的结果是空对象类型，因此 <code>keyof &#123;&#125;</code> 将得到 <code>never</code> 类型。</li></ul><p>综上所述，<code>GetReadonlyKeys&lt;T&gt;</code> 类型会返回 T 中所有声明为只读属性的键名组成的联合类型。如果 <code>T</code> 没有只读属性，则返回类型为 <code>never</code>。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">GetReadonlyKeys</span>&lt;T&gt; = keyof &#123;</span><br><span class="line">    [</span><br><span class="line">        P <span class="keyword">in</span> keyof T <span class="keyword">as</span> (</span><br><span class="line">            &lt;I&gt;<span class="function">() =&gt;</span> I <span class="keyword">extends</span> (&#123; [I <span class="keyword">in</span> P]: T[I] &#125;) ? <span class="literal">true</span> : <span class="built_in">never</span></span><br><span class="line">        ) <span class="keyword">extends</span> (</span><br><span class="line">            &lt;I&gt;<span class="function">() =&gt;</span> I <span class="keyword">extends</span> (&#123; <span class="keyword">readonly</span> [I <span class="keyword">in</span> P]: T[I] &#125;) ? <span class="literal">true</span> : <span class="built_in">never</span></span><br><span class="line">        ) ? P : <span class="built_in">never</span></span><br><span class="line">    ] : <span class="built_in">never</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">实现泛型`GetReadonlyKeys&lt;T&gt;`，`GetReadonlyKeys&lt;T&gt;`返回由对象 `T` 所有只读属性的键组成的联合类型。</summary>
    
    
    
    <category term="前端" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/type/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/tags/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/tags/type/"/>
    
  </entry>
  
  <entry>
    <title>实现 ReturnType</title>
    <link href="https://note.batype.com/typescript/questions/returntype.html"/>
    <id>https://note.batype.com/typescript/questions/returntype.html</id>
    <published>2024-03-08T09:58:10.562Z</published>
    <updated>2024-03-08T09:59:41.851Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>不使用 <code>ReturnType</code> 实现 TypeScript 的 <code>ReturnType&lt;T&gt;</code> 泛型。</p><p>例如：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">fn</span> = (<span class="params">v: <span class="built_in">boolean</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (v)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> a = <span class="title class_">MyReturnType</span>&lt;<span class="keyword">typeof</span> fn&gt; <span class="comment">// 应推导出 &quot;1 | 2&quot;</span></span><br></pre></td></tr></table></figure><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">MyReturnType</span>&lt;T <span class="keyword">extends</span> <span class="title class_">Function</span>&gt; = T <span class="keyword">extends</span> (...<span class="attr">args</span>: <span class="built_in">any</span>[]) =&gt; infer R</span><br><span class="line">? R</span><br><span class="line">: <span class="built_in">never</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fn</span> = (<span class="params">v: <span class="built_in">boolean</span></span>) =&gt; (v ? <span class="number">1</span> : <span class="number">2</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fn1</span> = (<span class="params">v: <span class="built_in">boolean</span>, w: <span class="built_in">any</span></span>) =&gt; (v ? <span class="number">1</span> : <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> fnType = <span class="title class_">MyReturnType</span>&lt;<span class="keyword">typeof</span> fn&gt;;</span><br><span class="line"><span class="keyword">type</span> fnType1 = <span class="title class_">MyReturnType</span>&lt;<span class="keyword">typeof</span> fn1&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">ComplexObject</span> = &#123;</span><br><span class="line">    <span class="attr">a</span>: [<span class="number">12</span>, <span class="string">&quot;foo&quot;</span>];</span><br><span class="line">    <span class="attr">bar</span>: <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    <span class="title function_">prev</span>(): <span class="built_in">number</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> fnType2 = <span class="title class_">MyReturnType</span>&lt;<span class="function">() =&gt;</span> <span class="title class_">ComplexObject</span>&gt;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">不使用 `ReturnType` 实现 TypeScript 的 `ReturnType&lt;T&gt;` 泛型。</summary>
    
    
    
    <category term="前端" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/type/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/tags/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/tags/type/"/>
    
  </entry>
  
  <entry>
    <title>实现 Omit</title>
    <link href="https://note.batype.com/typescript/questions/omit.html"/>
    <id>https://note.batype.com/typescript/questions/omit.html</id>
    <published>2024-03-08T09:55:00.513Z</published>
    <updated>2024-03-11T02:12:07.017Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>不使用 <code>Omit</code> 实现 <code>TypeScript</code> 的 <code>Omit&lt;T, K&gt;</code> 泛型。</p><p><code>Omit</code> 会创建一个省略 <code>K</code> 中字段的 <code>T</code> 对象。</p><p>例如：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Todo</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">completed</span>: <span class="built_in">boolean</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TodoPreview</span> = <span class="title class_">MyOmit</span>&lt;<span class="title class_">Todo</span>, <span class="string">&#x27;description&#x27;</span> | <span class="string">&#x27;title&#x27;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">todo</span>: <span class="title class_">TodoPreview</span> = &#123;</span><br><span class="line">  <span class="attr">completed</span>: <span class="literal">false</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Todo</span> &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">description</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">completed</span>: <span class="built_in">boolean</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">MyOmit</span>&lt;T, K <span class="keyword">extends</span> keyof T&gt; = &#123;</span><br><span class="line">    [P <span class="keyword">in</span> keyof T <span class="keyword">as</span> P <span class="keyword">extends</span> K ? <span class="built_in">never</span> : P]: T[P];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @ts-expect-error</span></span><br><span class="line"><span class="keyword">type</span> error = <span class="title class_">MyOmit</span>&lt;<span class="title class_">Todo</span>, <span class="string">&quot;description&quot;</span> | <span class="string">&quot;invalid&quot;</span>&gt;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">不使用 `Omit` 实现 `TypeScript` 的 `Omit&lt;T, K&gt;` 泛型。</summary>
    
    
    
    <category term="前端" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/type/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/tags/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/tags/type/"/>
    
  </entry>
  
  <entry>
    <title>实现 Pick</title>
    <link href="https://note.batype.com/typescript/questions/pick.html"/>
    <id>https://note.batype.com/typescript/questions/pick.html</id>
    <published>2024-03-08T09:47:52.213Z</published>
    <updated>2024-03-11T02:12:15.259Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>不使用 <code>Pick&lt;T, K&gt;</code> ，实现 TS 内置的 <code>Pick&lt;T, K&gt;</code> 的功能</p><p><strong>从类型 <code>T</code> 中选出符合 <code>K</code> 的属性，构造一个新的类型</strong>。</p><p>例如：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Todo</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">completed</span>: <span class="built_in">boolean</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TodoPreview</span> = <span class="title class_">MyPick</span>&lt;<span class="title class_">Todo</span>, <span class="string">&#x27;title&#x27;</span> | <span class="string">&#x27;completed&#x27;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">todo</span>: <span class="title class_">TodoPreview</span> = &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;Clean room&#x27;</span>,</span><br><span class="line">    <span class="attr">completed</span>: <span class="literal">false</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Todo</span> &#123;</span><br><span class="line"><span class="attr">title</span>: <span class="built_in">string</span>;</span><br><span class="line"><span class="attr">description</span>: <span class="built_in">string</span>;</span><br><span class="line"><span class="attr">completed</span>: <span class="built_in">boolean</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 1. K extends keyof T, K继承所有的T的key属性为type</span></span><br><span class="line"><span class="comment">// 2. P in keyof T 拿出所有的key，在extends K，如果是true，则返回 P</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">MyPick</span>&lt;T, K <span class="keyword">extends</span> keyof T&gt; = &#123;</span><br><span class="line">[P <span class="keyword">in</span> keyof T <span class="keyword">as</span> P <span class="keyword">extends</span> K ? P : <span class="built_in">never</span>]: T[P];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TodoPreviewMy</span> = <span class="title class_">MyPick</span>&lt;<span class="title class_">Todo</span>, <span class="string">&quot;title&quot;</span> | <span class="string">&quot;completed&quot;</span>&gt;;</span><br><span class="line"><span class="comment">// type TodoPreviewMy = &#123;</span></span><br><span class="line"><span class="comment">//     title: string;</span></span><br><span class="line"><span class="comment">//     completed: boolean;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">todo</span>: <span class="title class_">TodoPreviewMy</span> = &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&quot;Clean room&quot;</span>,</span><br><span class="line">    <span class="attr">completed</span>: <span class="literal">false</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">不使用 `Pick&lt;T, K&gt;` ，实现 TS 内置的 `Pick&lt;T, K&gt;` 的功能.</summary>
    
    
    
    <category term="前端" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/TypeScript/type/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://note.batype.com/tags/TypeScript/"/>
    
    <category term="type" scheme="https://note.batype.com/tags/type/"/>
    
  </entry>
  
  <entry>
    <title>uni-app APP 更新版本提示</title>
    <link href="https://note.batype.com/uni-app/vue/update.html"/>
    <id>https://note.batype.com/uni-app/vue/update.html</id>
    <published>2023-12-21T08:28:05.000Z</published>
    <updated>2023-12-21T08:32:39.632Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h3 id="AppUpdate-方法"><a href="#AppUpdate-方法" class="headerlink" title="AppUpdate 方法"></a>AppUpdate 方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> baseUrl <span class="keyword">from</span> <span class="string">&#x27;@/basecall/utils.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">AppUpdate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> appleId = <span class="number">2021004105638058</span>;</span><br><span class="line">  <span class="keyword">let</span> _this = <span class="variable language_">this</span>;</span><br><span class="line">  <span class="keyword">let</span> platform = uni.<span class="title function_">getSystemInfoSync</span>().<span class="property">platform</span>;</span><br><span class="line">  <span class="comment">//1. 获取当前版本号</span></span><br><span class="line">  <span class="keyword">let</span> curversion = <span class="number">100</span>;</span><br><span class="line">  plus.<span class="property">runtime</span>.<span class="title function_">getProperty</span>(plus.<span class="property">runtime</span>.<span class="property">appid</span>, <span class="keyword">function</span> (<span class="params">widgetInfo</span>) &#123;</span><br><span class="line">    curversion = widgetInfo.<span class="property">version</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;当前版本&quot;</span>, curversion);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">    2， 用当前版本号提交给服务端，判断是否需要更新，接口返回信息如下</span></span><br><span class="line"><span class="comment">        versionIdinteger(int64)</span></span><br><span class="line"><span class="comment">        versionId版本号string</span></span><br><span class="line"><span class="comment">        intro版本描述string</span></span><br><span class="line"><span class="comment">        forced是否强制更新boolean</span></span><br><span class="line"><span class="comment">        news是否是最新版本boolean</span></span><br><span class="line"><span class="comment">        urlapk地址string</span></span><br><span class="line"><span class="comment">        createTime创建时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">  uni.<span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: baseUrl.<span class="property">baseUrl</span> + <span class="string">&quot;/getVersion&quot;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; versionId, forced, url, createTime &#125; = res.<span class="property">data</span>.<span class="property">data</span>;</span><br><span class="line">  uni.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;url&#x27;</span>, url);</span><br><span class="line">      <span class="keyword">let</span> currTimeStamp = <span class="keyword">new</span> <span class="title class_">Date</span>(createTime).<span class="title function_">getTime</span>();</span><br><span class="line">      <span class="comment">/* 判断是否是最新版 */</span></span><br><span class="line">      <span class="keyword">if</span> (versionId !== curversion) &#123;</span><br><span class="line">        <span class="comment">//forced true 强制更新 false 自然更新</span></span><br><span class="line">        <span class="keyword">if</span> (forced == <span class="string">&#x27;true&#x27;</span>) &#123;</span><br><span class="line">          uni.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&quot;紧急升级通知&quot;</span>,</span><br><span class="line">            <span class="attr">content</span>:</span><br><span class="line">              <span class="string">&quot;亲爱的用户，为了提供更好的使用体验与功能改进，我们进行了系统升级。请立即完成强制升级，否则将无法正常使用APP。感谢您的配合与支持！&quot;</span>,</span><br><span class="line">            <span class="attr">confirmText</span>: <span class="string">&quot;立即更新&quot;</span>,</span><br><span class="line">            <span class="attr">showCancel</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">              <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (platform == <span class="string">&quot;ios&quot;</span>) &#123;</span><br><span class="line">                  plus.<span class="property">runtime</span>.<span class="title function_">launchApplication</span>(</span><br><span class="line">                    &#123;</span><br><span class="line">                      <span class="attr">action</span>: <span class="string">`itms-apps://itunes.apple.com/cn/app/id<span class="subst">$&#123;appleId&#125;</span>?mt=8`</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                      <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">                        <span class="string">&quot;Open system default browser failed: &quot;</span> + e.<span class="property">message</span></span><br><span class="line">                      );</span><br><span class="line">                    &#125;</span><br><span class="line">                  );</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">                    <span class="attr">icon</span>: <span class="string">&quot;none&quot;</span>,</span><br><span class="line">                    <span class="attr">mask</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&quot;有新的版本发布，程序已启动自动更新。&quot;</span>,</span><br><span class="line">                    <span class="attr">duration</span>: <span class="number">5000</span>,</span><br><span class="line">                  &#125;);</span><br><span class="line">                  <span class="comment">//设置 最新版本apk的下载链接 这是固定的</span></span><br><span class="line">                  <span class="keyword">let</span> downloadApkUrl = url;</span><br><span class="line">                  <span class="variable language_">console</span>.<span class="title function_">log</span>(downloadApkUrl);</span><br><span class="line">                  plus.<span class="property">runtime</span>.<span class="title function_">openURL</span>(downloadApkUrl);</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          uni.<span class="title function_">getStorage</span>(&#123;</span><br><span class="line">            <span class="attr">key</span>: <span class="string">&quot;tip_version_update_time&quot;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">              <span class="keyword">var</span> lastTimeStamp = res.<span class="property">data</span>; <span class="comment">// 本地时间戳</span></span><br><span class="line">              <span class="keyword">var</span> tipTimeLength = <span class="number">0</span>; <span class="comment">// 时间间隔</span></span><br><span class="line">              <span class="keyword">let</span> cha = lastTimeStamp + tipTimeLength - currTimeStamp;</span><br><span class="line">              <span class="keyword">if</span> (lastTimeStamp + tipTimeLength &gt; currTimeStamp) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;当后台时间戳大于本地时间戳才会进入&quot;</span>);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;立即更新&quot;</span>);</span><br><span class="line">                <span class="comment">//重新设置时间戳</span></span><br><span class="line">                uni.<span class="title function_">setStorage</span>(&#123;</span><br><span class="line">                  <span class="attr">key</span>: <span class="string">&quot;tip_version_update_time&quot;</span>,</span><br><span class="line">                  <span class="attr">data</span>: currTimeStamp,</span><br><span class="line">                  <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;setStorage-success&quot;</span>);</span><br><span class="line">                  &#125;,</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                uni.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">                  <span class="attr">title</span>: <span class="string">&quot;版本更新&quot;</span>,</span><br><span class="line">                  <span class="attr">content</span>:</span><br><span class="line">                    <span class="string">&quot;尊敬的用户，我们为您准备了最新的版本更新，内含诸多新功能与用户体验优化。点击立即升级，享受更多精彩和便利。&quot;</span>,</span><br><span class="line">                  <span class="attr">confirmText</span>: <span class="string">&quot;立即更新&quot;</span>,</span><br><span class="line">                  <span class="attr">cancelText</span>: <span class="string">&quot;取消&quot;</span>,</span><br><span class="line">                  <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">                      <span class="keyword">if</span> (platform == <span class="string">&quot;ios&quot;</span>) &#123;</span><br><span class="line">                        plus.<span class="property">runtime</span>.<span class="title function_">launchApplication</span>(</span><br><span class="line">                          &#123;</span><br><span class="line">                            <span class="attr">action</span>: <span class="string">`itms-apps://itunes.apple.com/cn/app/id<span class="subst">$&#123;appleId&#125;</span>?mt=8`</span>,</span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                            <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">                              <span class="string">&quot;Open system default browser failed: &quot;</span> + e.<span class="property">message</span></span><br><span class="line">                            );</span><br><span class="line">                          &#125;</span><br><span class="line">                        );</span><br><span class="line">                      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">                          <span class="attr">icon</span>: <span class="string">&quot;none&quot;</span>,</span><br><span class="line">                          <span class="attr">mask</span>: <span class="literal">true</span>,</span><br><span class="line">                          <span class="attr">title</span>: <span class="string">&quot;有新的版本发布，程序已启动自动更新。&quot;</span>,</span><br><span class="line">                          <span class="attr">duration</span>: <span class="number">5000</span>,</span><br><span class="line">                        &#125;);</span><br><span class="line">                        <span class="comment">//设置 最新版本apk的下载链接 这是固定的 每次把包放在这个链接里里面即可 由后端制作</span></span><br><span class="line">                        <span class="keyword">let</span> downloadApkUrl = url;</span><br><span class="line">                        plus.<span class="property">runtime</span>.<span class="title function_">openURL</span>(downloadApkUrl);</span><br><span class="line">                      &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">cancel</span>) &#123;</span><br><span class="line">                      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;下次一定&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;,</span><br><span class="line">                &#125;);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">fail</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">              uni.<span class="title function_">setStorage</span>(&#123;</span><br><span class="line">                <span class="attr">key</span>: <span class="string">&quot;tip_version_update_time&quot;</span>,</span><br><span class="line">                <span class="attr">data</span>: currTimeStamp,</span><br><span class="line">                <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;setStorage-success&quot;</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(createTime, <span class="string">&quot;createTimecreateTime&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">fail</span>: <span class="function">() =&gt;</span> &#123;&#125;,</span><br><span class="line">    <span class="attr">complete</span>: <span class="function">() =&gt;</span> &#123;&#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在APP-vue中注册"><a href="#在APP-vue中注册" class="headerlink" title="在APP.vue中注册"></a>在APP.vue中注册</h3><p>在<code>App.vue</code>中，我们需要在<code>onLaunch</code>生命周期函数中调用<code>AppUpdate</code>方法，来检查是否有新版本的APP。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppUpdate</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/common/AppUpdate.js&#x27;</span>;</span><br><span class="line"><span class="title function_">onLaunch</span>(<span class="params"></span>) &#123;    </span><br><span class="line">    <span class="title class_">AppUpdate</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">在`App.vue`中，我们需要在`onLaunch`生命周期函数中调用`AppUpdate`方法，来检查是否有新版本的APP。</summary>
    
    
    
    <category term="uni-app" scheme="https://note.batype.com/categories/uni-app/"/>
    
    <category term="vue" scheme="https://note.batype.com/categories/uni-app/vue/"/>
    
    <category term="AppUpdate" scheme="https://note.batype.com/categories/uni-app/vue/AppUpdate/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="uni-app" scheme="https://note.batype.com/tags/uni-app/"/>
    
    <category term="vue" scheme="https://note.batype.com/tags/vue/"/>
    
    <category term="AppUpdate" scheme="https://note.batype.com/tags/AppUpdate/"/>
    
  </entry>
  
  <entry>
    <title>uni-app 分享页制作</title>
    <link href="https://note.batype.com/uni-app/vue/share.html"/>
    <id>https://note.batype.com/uni-app/vue/share.html</id>
    <published>2023-12-21T08:17:38.000Z</published>
    <updated>2023-12-21T08:26:11.552Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2 id="uni-app-分享页制作"><a href="#uni-app-分享页制作" class="headerlink" title="uni-app 分享页制作"></a>uni-app 分享页制作</h2><p>通过canvas 先制作图。可以做一个canvas 背景在生成一个二维码canvas 图，在将两个canvas 合成一个图片，然后将图片分享出来。</p><h3 id="html-模板"><a href="#html-模板" class="headerlink" title="html 模板"></a>html 模板</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;view class=&quot;content&quot;&gt;</span><br><span class="line">        &lt;u-icon name=&#x27;arrow-left&#x27; @click=&quot;goBack&quot; style=&quot;position: absolute; z-index: 999; top: 80rpx; left: 40rpx; font-size: 40rpx; color: #454545;&quot;&gt;&lt;/u-icon&gt;</span><br><span class="line">        &lt;view style=&quot;width: 100%; height: calc(100vh - 44px);&quot;&gt;</span><br><span class="line">            &lt;view class=&quot;btn-opate&quot; style=&quot;&quot;&gt;</span><br><span class="line">                &lt;button type=&quot;primary&quot; size=&quot;mini&quot; @click=&quot;saveImg&quot;&gt;保存分享&lt;/button&gt;</span><br><span class="line">                &lt;button type=&quot;default&quot; size=&quot;mini&quot; @click=&quot;copyCode&quot;&gt;复制邀请码&lt;/button&gt;</span><br><span class="line">            &lt;/view&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;image class=&quot;image&quot; style=&quot;width: 100%; height: calc(100vh - 44px);&quot; :src=&quot;ImagePath&quot; mode=&quot;widthFix&quot;&gt;&lt;/image&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">        &lt;view v-if=&quot;show&quot;&gt;</span><br><span class="line">            &lt;canvas canvas-id=&quot;myCanvas&quot; style=&quot;width: 100vw; height: 100vh;&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">            &lt;canvas canvas-id=&quot;qrcode&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="二维码制作"><a href="#二维码制作" class="headerlink" title="二维码制作"></a>二维码制作</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">UQRCode</span> <span class="keyword">from</span> <span class="string">&#x27;uqrcodejs&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">qrCode</span>(<span class="params"></span>)&#123;</span><br><span class="line">    uni.<span class="title function_">showLoading</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;分享页制作中...&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">var</span> qr = <span class="keyword">new</span> <span class="title class_">UQRCode</span>();</span><br><span class="line">    <span class="comment">// 设置二维码内容</span></span><br><span class="line">    qr.<span class="property">data</span> = <span class="string">`https://app.xianyuangu.com/#/pages/login/h5login?registerCode=<span class="subst">$&#123;<span class="variable language_">this</span>.invitationCode&#125;</span>`</span>;</span><br><span class="line">    <span class="comment">// 设置二维码大小，必须与canvas设置的宽高一致</span></span><br><span class="line">    qr.<span class="property">size</span> = <span class="number">120</span>;</span><br><span class="line">    <span class="comment">// 调用制作二维码方法</span></span><br><span class="line">    qr.<span class="title function_">make</span>();</span><br><span class="line">    <span class="keyword">const</span> context = uni.<span class="title function_">createCanvasContext</span>(<span class="string">&#x27;qrcode&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">    qr.<span class="property">canvasContext</span> = context;</span><br><span class="line">    <span class="comment">// 调用绘制方法将二维码图案绘制到canvas上</span></span><br><span class="line">    qr.<span class="title function_">drawCanvas</span>();</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 将canvas内容保存为图片</span></span><br><span class="line">        uni.<span class="title function_">canvasToTempFilePath</span>(&#123;</span><br><span class="line">            <span class="attr">canvasId</span>: <span class="string">&#x27;qrcode&#x27;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">qrcode</span> = res.<span class="property">tempFilePath</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">drawImageToCanvas</span>();</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="variable language_">this</span>);</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="绘制图片"><a href="#绘制图片" class="headerlink" title="绘制图片"></a>绘制图片</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">drawImageToCanvas</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 获取 canvas 上下文</span></span><br><span class="line">    <span class="keyword">const</span> systemInfo = uni.<span class="title function_">getSystemInfoSync</span>();</span><br><span class="line">    <span class="keyword">const</span> canvasWidth = systemInfo.<span class="property">windowWidth</span>;</span><br><span class="line">    <span class="keyword">const</span> canvasHeight = systemInfo.<span class="property">windowHeight</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> context = uni.<span class="title function_">createCanvasContext</span>(<span class="string">&#x27;myCanvas&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Step 6: 使用 drawImage 方法绘制图片</span></span><br><span class="line">    context.<span class="title function_">drawImage</span>(<span class="string">&#x27;/static/image/share.png&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>, canvasWidth, canvasHeight);</span><br><span class="line">    </span><br><span class="line">    context.<span class="title function_">setFillStyle</span>(<span class="string">&#x27;#D43030&#x27;</span>); <span class="comment">// 黑色文本</span></span><br><span class="line">    context.<span class="title function_">setFontSize</span>(<span class="number">32</span>); <span class="comment">// 文字大小</span></span><br><span class="line">    context.<span class="title function_">fillText</span>(<span class="variable language_">this</span>.<span class="property">invitationCode</span>, canvasWidth / <span class="number">2</span> - <span class="number">50</span>, canvasHeight / <span class="number">2</span> * <span class="number">0.84</span>);</span><br><span class="line">    </span><br><span class="line">    context.<span class="title function_">drawImage</span>(</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">qrcode</span>,</span><br><span class="line">    canvasWidth / <span class="number">3</span> - <span class="number">20</span>,</span><br><span class="line">    canvasHeight / <span class="number">2</span>,</span><br><span class="line">    canvasWidth / <span class="number">1</span> ,</span><br><span class="line">    canvasWidth / <span class="number">2</span></span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">    context.<span class="title function_">save</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Step 7: 调用 draw 方法渲染 canvas</span></span><br><span class="line">    context.<span class="title function_">draw</span>(<span class="literal">true</span>, <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 将canvas内容保存为图片</span></span><br><span class="line">        uni.<span class="title function_">canvasToTempFilePath</span>(&#123;</span><br><span class="line">            <span class="attr">canvasId</span>: <span class="string">&#x27;myCanvas&#x27;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">show</span> = <span class="literal">false</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">ImagePath</span> = res.<span class="property">tempFilePath</span>;</span><br><span class="line">            uni.<span class="title function_">hideLoading</span>();</span><br><span class="line">            <span class="comment">// 在这里可以将得到的图片路径进行保存或分享等操作</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">                uni.<span class="title function_">hideLoading</span>();</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="variable language_">this</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;, <span class="number">1000</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="保存图片"><a href="#保存图片" class="headerlink" title="保存图片"></a>保存图片</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">env</span>: uni.<span class="title function_">getSystemInfoSync</span>().<span class="property">uniPlatform</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">saveImg</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// app 保存</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">env</span> == <span class="string">&#x27;app&#x27;</span>) &#123;</span><br><span class="line">        uni.<span class="title function_">saveImageToPhotosAlbum</span>(&#123;</span><br><span class="line">            <span class="attr">filePath</span>: <span class="variable language_">this</span>.<span class="property">ImagePath</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;保存成功&#x27;</span>,</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">/** 生成一个a元素,并创建一个单击事件 */</span></span><br><span class="line">        <span class="keyword">let</span> a = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        a.<span class="property">download</span> = name || <span class="string">&quot;photo&quot;</span>; <span class="comment">// 设置图片名称</span></span><br><span class="line">        a.<span class="property">href</span> = <span class="variable language_">this</span>.<span class="property">ImagePath</span>; <span class="comment">// 将生成的URL设置为a.href属性</span></span><br><span class="line">        a.<span class="title function_">setAttribute</span>(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;myLink&quot;</span>);</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(a);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;链接&quot;</span>, a);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">exportCodeConfirm</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">exportCodeConfirm</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> event = <span class="keyword">new</span> <span class="title class_">MouseEvent</span>(<span class="string">&quot;click&quot;</span>);</span><br><span class="line">    <span class="comment">/** 触发a的单击事件 */</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;myLink&quot;</span>).<span class="title function_">dispatchEvent</span>(event);</span><br><span class="line">    &#125;, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">通过canvas 先制作图。可以做一个canvas 背景在生成一个二维码canvas 图，在将两个canvas 合成一个图片，然后将图片分享出来。</summary>
    
    
    
    <category term="uni-app" scheme="https://note.batype.com/categories/uni-app/"/>
    
    <category term="vue" scheme="https://note.batype.com/categories/uni-app/vue/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="uni-app" scheme="https://note.batype.com/tags/uni-app/"/>
    
    <category term="vue" scheme="https://note.batype.com/tags/vue/"/>
    
    <category term="canvas" scheme="https://note.batype.com/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云服务器开发端口</title>
    <link href="https://note.batype.com/linux/port/open.html"/>
    <id>https://note.batype.com/linux/port/open.html</id>
    <published>2023-12-19T15:20:21.000Z</published>
    <updated>2023-12-21T08:14:29.928Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><ol><li><p>了解端口<br>在开始之前，我们需要了解一下端口。端口是计算机网络中的一个概念，它是用于标识应用程序的逻辑地址。在互联网中，每个应用程序都需要使用一个端口来进行通信。常见的端口有 HTTP 端口（80）、FTP 端口（21）、SSH 端口（22）等等。</p></li><li><p>登录腾讯云服务器<br>首先，我们需要登录到腾讯云服务器。可以使用 SSH 工具，如 PuTTY 或 Xshell，连接到服务器。在连接成功后，输入用户名和密码即可登录到服务器。</p></li><li><p>开放端口<br>要开放端口，我们需要使用防火墙规则。腾讯云服务器默认使用的是 iptables 防火墙。我们可以使用以下命令来开放端口：</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 端口号 -j ACCEPT</span><br></pre></td></tr></table></figure><p>其中，端口号是需要开放的端口号。例如，如果要开放 SSH 端口（22），则可以使用以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 22 -j ACCEPT</span><br></pre></td></tr></table></figure><ol start="4"><li>保存规则<br>开放端口后，我们需要保存规则，以便在服务器重启后仍然有效。可以使用以下命令来保存规则：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables save</span><br></pre></td></tr></table></figure><ol start="5"><li>查看规则<br>如果想要查看当前的防火墙规则，可以使用以下命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -L</span><br></pre></td></tr></table></figure><p>这将列出当前的防火墙规则，包括已开放的端口。</p><p>总结<br>开放端口是使用腾讯云服务器的一个基本操作。通过了解端口、登录服务器、开放端口、保存规则和查看规则，我们可以轻松地开放需要的端口，以便应用程序可以正常运行。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">在开始之前，我们需要了解一下端口。端口是计算机网络中的一个概念，它是用于标识应用程序的逻辑地址。在互联网中，每个应用程序都需要使用一个端口来进行通信。常见的端口有 HTTP 端口（80）、FTP 端口（21）、SSH 端口（22）等等。</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS上安装Nginx</title>
    <link href="https://note.batype.com/linux/install/nginx.html"/>
    <id>https://note.batype.com/linux/install/nginx.html</id>
    <published>2023-12-19T15:18:25.000Z</published>
    <updated>2023-12-21T08:14:29.927Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>要在CentOS上安装Nginx，您可以按照以下步骤进行操作：</p><p>打开终端或SSH连接到CentOS服务器。</p><p>确保您的系统已经更新到最新版本。运行以下命令更新软件包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br></pre></td></tr></table></figure><p>安装Nginx。运行以下命令进行安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install nginx</span><br></pre></td></tr></table></figure><p>启动Nginx服务：</p><p>使用以下命令启动Nginx服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start nginx</span><br></pre></td></tr></table></figure><p>检查Nginx状态：</p><p>使用以下命令检查Nginx服务的状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status nginx</span><br></pre></td></tr></table></figure><p>如果Nginx正在运行，您将看到”active (running)”状态。</p><p>添加到开机启动项：</p><p>要使Nginx在系统启动时自动启动，可以使用以下命令将其添加到开机启动项：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable nginx</span><br></pre></td></tr></table></figure><p>现在，Nginx将在系统启动时自动启动。您可以通过重新启动服务器并检查Nginx状态来验证设置是否成功。请注意，上述命令假定您具有适当的权限（如sudo）来执行这些操作。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">要在CentOS上安装Nginx，您可以按照以下步骤进行操作</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="nginx" scheme="https://note.batype.com/categories/linux/nginx/"/>
    
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="nginx" scheme="https://note.batype.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>MySQL linux install</title>
    <link href="https://note.batype.com/linux/install/MySQL.html"/>
    <id>https://note.batype.com/linux/install/MySQL.html</id>
    <published>2023-12-19T15:14:19.000Z</published>
    <updated>2023-12-21T08:14:29.927Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>在线下载mysql安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><p>安装MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><p>安装MySQL服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure><p>报错 失败的软件包是： mysql-community-libs-compat-5.7.37-1.el7.x86_64<br>GPG 密钥配置为： file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-mysql<br>解决办法：原因是Mysql的GPG升级了，需要重新获取<br>使用以下命令即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022</span><br></pre></td></tr></table></figure><p>重新执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure><p>安装完毕<br>启动Mysql服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start  mysqld.service</span><br></pre></td></tr></table></figure><p>修改mysql的密码<br>查看MySQL临时密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;password&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure><p>使用临时密码先登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>注意:密码设置必须要大小写字母数字和特殊符号（,&#x2F;‘;:等）,不然不能配置成功<br>查看mysql默认密码复杂度</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW VARIABLES LIKE &#x27;validate_password%&#x27;;</span><br></pre></td></tr></table></figure><p>把MySQL的密码校验强度改为低风险</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global validate_password_policy=LOW;</span><br></pre></td></tr></table></figure><p>修改MySQL的密码长度</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global validate_password_length=4;</span><br></pre></td></tr></table></figure><p>修改密码为root</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;root&#x27;;</span><br></pre></td></tr></table></figure><p>开启mysql远程访问</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;root&#x27; with grant option;</span><br></pre></td></tr></table></figure><p>1、使用 grant 命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on 数据库名.表名 to 创建的用户名(root)@&quot;%&quot; identified by &quot;密码&quot;;</span><br></pre></td></tr></table></figure><p>2、格式说明：<br>数据库名.表名 如果写成*.*代表授权所有的数据库<br>@ 后面是访问mysql的客户端IP地址（或是 主机名） % 代表任意的客户端，如果填写 localhost 为本地访问（那此用户就不能远程访问该mysql数据库了）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges; //刷新权限</span><br></pre></td></tr></table></figure><p>退出mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit;</span><br></pre></td></tr></table></figure><p>为firewalld添加开放端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent  //开放端口</span><br><span class="line">firewall-cmd --reload  //重新加载防火墙</span><br></pre></td></tr></table></figure><p>其他配置<br>关闭MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop mysqld</span><br></pre></td></tr></table></figure><p>重启MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><p>查看MySQL运行状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mysqld</span><br></pre></td></tr></table></figure><p>设置开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable mysqld</span><br></pre></td></tr></table></figure><p>关闭开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable mysqld</span><br></pre></td></tr></table></figure><p>配置默认编码为utf8</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/my.cnf</span><br><span class="line">在[mysqld]中加入 character_set_server=utf8 </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>区分大小写</p><p>&#x2F;etc&#x2F;my.cof</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lower_case_table_names=1</span><br></pre></td></tr></table></figure><p>其他默认配置文件路径：<br>配置文件： &#x2F;etc&#x2F;my.cnf<br>日志文件： &#x2F;var&#x2F;log&#x2F;mysqld.log<br>服务启动脚本： &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;mysqld.service</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">在线下载mysql安装包</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="mysql" scheme="https://note.batype.com/categories/linux/mysql/"/>
    
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="mysql" scheme="https://note.batype.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Optional chaining 语法编程</title>
    <link href="https://note.batype.com/javascript/optional/chaining.html"/>
    <id>https://note.batype.com/javascript/optional/chaining.html</id>
    <published>2023-12-05T02:43:09.695Z</published>
    <updated>2023-12-05T02:50:54.364Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h3 id="什么是-Optional-Chaining？"><a href="#什么是-Optional-Chaining？" class="headerlink" title="什么是 Optional Chaining？"></a>什么是 Optional Chaining？</h3><p>Optional chaining 是一个现代JavaScript语法特性，允许开发者在读取对象内部嵌套属性时安全地处理 <code>undefined</code> 或 <code>null</code> 值。这种语法通过 <code>?.</code> 操作符实现，可以避免在查询属性或调用方法时因为中间某个环节不存在而引发错误。</p><h3 id="Optional-chaining-的基本使用示例如下"><a href="#Optional-chaining-的基本使用示例如下" class="headerlink" title="Optional chaining 的基本使用示例如下"></a>Optional chaining 的基本使用示例如下</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    <span class="attr">a</span>: &#123;</span><br><span class="line">        <span class="attr">b</span>: &#123;</span><br><span class="line">            <span class="attr">c</span>: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 传统的深层属性访问可能会抛出错误，如果某个属性不存在</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> value = obj &amp;&amp; obj.<span class="property">a</span> &amp;&amp; obj.<span class="property">a</span>.<span class="property">b</span> &amp;&amp; obj.<span class="property">a</span>.<span class="property">b</span>.<span class="property">c</span>;</span><br><span class="line"><span class="comment">// 使用 optional chaining 语法，安全地读取嵌套属性</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> valueWithOptionalChaining = obj?.<span class="property">a</span>?.<span class="property">b</span>?.<span class="property">c</span>; <span class="comment">// 输出 1</span></span><br><span class="line"><span class="comment">// 如果中间某个属性不存在，表达式会返回 undefined，而不是抛出错误</span></span><br><span class="line"><span class="keyword">const</span> undefinedValue = obj?.<span class="property">a</span>?.<span class="property">nonExistingProp</span>?.<span class="property">c</span>; <span class="comment">// 输出 undefined</span></span><br></pre></td></tr></table></figure><h3 id="Optional-chaining-可以用于四种不同的操作"><a href="#Optional-chaining-可以用于四种不同的操作" class="headerlink" title="Optional chaining 可以用于四种不同的操作"></a>Optional chaining 可以用于四种不同的操作</h3><ol><li>对象属性访问</li></ol><p>如上例所示，可以安全地访问嵌套对象属性。</p><ol start="2"><li>数组索引访问</li></ol><p>可以安全地访问数组的索引，如果数组是 undefined 或 null，则不会报错。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> valueAtIndex = arr?.[<span class="number">2</span>]; <span class="comment">// 输出 3</span></span><br><span class="line"><span class="keyword">const</span> nonExistingIndex = arr?.[<span class="number">5</span>]; <span class="comment">// 输出 undefined</span></span><br></pre></td></tr></table></figure><ol start="3"><li>函数或方法调用</li></ol><p>如果不确定一个对象上的函数是否存在，可以使用 optional chaining 安全地调用函数或方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Function exists&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj.<span class="property">a</span>?.(); <span class="comment">// 输出 &#x27;Function exists&#x27;</span></span><br><span class="line">obj.<span class="property">b</span>?.(); <span class="comment">// 由于 b 不存在，不执行任何操作，返回 undefined</span></span><br></pre></td></tr></table></figure><ol start="4"><li>默认值中使用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> user = &#123;&#125;;</span><br><span class="line"><span class="keyword">const</span> name = user?.<span class="property">name</span> ?? <span class="string">&quot;匿名用户&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name);</span><br></pre></td></tr></table></figure><p>要注意的是，optional chaining 语法是 ECMAScript 2020（ES11）的一部分，因此在老旧的JavaScript环境中可能不受支持。对于这些环境，可以使用Babel这样的工具来转译代码，使其兼容。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">Optional chaining 是一个现代JavaScript语法特性，允许开发者在读取对象内部嵌套属性时安全地处理 undefined 或 null 值。这种语法通过 ?. 操作符实现，可以避免在查询属性或调用方法时因为中间某个环节不存在而引发错误。</summary>
    
    
    
    <category term="前端" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="es6" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/es6/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://note.batype.com/tags/JavaScript/"/>
    
    <category term="es6" scheme="https://note.batype.com/tags/es6/"/>
    
  </entry>
  
  <entry>
    <title>Docker 安装Redis</title>
    <link href="https://note.batype.com/linux/docker/redis.html"/>
    <id>https://note.batype.com/linux/docker/redis.html</id>
    <published>2023-11-22T13:24:32.000Z</published>
    <updated>2023-11-28T08:49:04.273Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h3 id="下载redis-镜像"><a href="#下载redis-镜像" class="headerlink" title="下载redis 镜像"></a>下载redis 镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull redis</span><br></pre></td></tr></table></figure><h3 id="启动镜像并同步数据"><a href="#启动镜像并同步数据" class="headerlink" title="启动镜像并同步数据"></a>启动镜像并同步数据</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name redis -p 6379:6379 \</span><br><span class="line"> --restart=always \</span><br><span class="line"> -v /home/xt/redis/redis.conf:/etc/redis/redis.conf \</span><br><span class="line"> -v /home/xt/redis/data:/data \</span><br><span class="line"> redis redis-server /etc/redis/redis.conf</span><br></pre></td></tr></table></figure><h3 id="添加密码"><a href="#添加密码" class="headerlink" title="添加密码"></a>添加密码</h3><h4 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it 04f824eaf3800958615a9874084ea6d57ab346cd61723a1eb54074a9477f1efe /bin/bash</span><br></pre></td></tr></table></figure><p>在Redis命令行中，我们可以使用config set命令来设置Redis的密码。以下是设置密码的代码和注释。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config set requirepass your_password</span><br></pre></td></tr></table></figure><h3 id="重启Redis容器"><a href="#重启Redis容器" class="headerlink" title="重启Redis容器"></a>重启Redis容器</h3><p>完成上述步骤后，我们需要重启Redis容器使密码生效。可以使用以下命令重启Redis容器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart 04f824eaf3800958615a9874084ea6d57ab346cd61723a1eb54074a9477f1efe</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">Docker 安装Redis,并且进行数据和配置文件同步，以及密码修改。</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="docker" scheme="https://note.batype.com/categories/linux/docker/"/>
    
    <category term="redis" scheme="https://note.batype.com/categories/linux/docker/redis/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="docker， redis" scheme="https://note.batype.com/tags/docker%EF%BC%8C-redis/"/>
    
  </entry>
  
  <entry>
    <title>linux 配置缩写快捷操作</title>
    <link href="https://note.batype.com/linux/config/git-config.html"/>
    <id>https://note.batype.com/linux/config/git-config.html</id>
    <published>2023-11-13T07:52:24.000Z</published>
    <updated>2023-11-28T08:49:04.275Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>编辑~&#x2F;.zshrc 增加自定义配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alias gps=&quot;git push origin&quot;</span><br><span class="line">alias gcm=&quot;git add . &amp;&amp; git commit -m &quot;</span><br><span class="line">alias gpl=&quot;git pull origin&quot;</span><br><span class="line">alias gco=&quot;git checkout&quot;</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">Git linux 配置缩写快捷操作，可以提升效能开发。</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="git" scheme="https://note.batype.com/categories/linux/git/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Git" scheme="https://note.batype.com/tags/Git/"/>
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>ubantu 安装Maven 和jdk 步骤</title>
    <link href="https://note.batype.com/linux/install/maven/jdk.html"/>
    <id>https://note.batype.com/linux/install/maven/jdk.html</id>
    <published>2023-11-13T07:35:10.000Z</published>
    <updated>2023-11-28T08:49:04.276Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>To install Maven and JDK (Java Development Kit) on Ubuntu, you can follow these steps:</p><p>Open a terminal on your Ubuntu system.</p><p>Update the package lists by running the following command:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>Install Maven by running the following command:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install maven</span><br></pre></td></tr></table></figure><p>This will install Maven and its dependencies.</p><p>Verify the installation by running the following command:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn --version</span><br></pre></td></tr></table></figure><p>This should display the version of Maven installed on your system.</p><p>Install JDK (Java Development Kit) using the following steps:</p><p>a. Check if Java is already installed on your system by running the following command:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum list installed | grep java</span><br><span class="line">或者</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><p>If Java is not installed, you will see an error message.</p><p>b. select yum list package version</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum search java | grep -i --color jdk</span><br></pre></td></tr></table></figure><p>c. Install the default JDK package by running the following command:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install java-1.8.0-openjdk.x86_64</span><br><span class="line">or</span><br><span class="line">sudo apt install default-jdk</span><br></pre></td></tr></table></figure><p>This will install the default JDK package available in the Ubuntu package repository.</p><p>d. Verify the installation by running the following command:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac -version</span><br></pre></td></tr></table></figure><p>This should display the version of the JDK installed on your system.</p><p>Additionally, you can also run the following command to check the Java Runtime Environment (JRE) version:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>This will display the JRE version.</p><p>e. jdk checkout version link</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/java 1</span><br><span class="line">sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/javac 1</span><br></pre></td></tr></table></figure><p>f. use shell checkout version</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --config java</span><br><span class="line">有 3 个候选项可用于替换 java (提供 /usr/bin/java)。</span><br><span class="line"></span><br><span class="line">选择       路径                                          优先级  状态</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">* 0            /usr/lib/jvm/java-17-openjdk-amd64/bin/java      1711      自动模式</span><br><span class="line">1            /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/java   1         手动模式</span><br><span class="line">2            /usr/lib/jvm/java-17-openjdk-amd64/bin/java      1711      手动模式</span><br><span class="line">3            /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java   1081      手动模式</span><br><span class="line"></span><br><span class="line">要维持当前值[*]请按&lt;回车键&gt;，或者键入选择的编号：1</span><br></pre></td></tr></table></figure><p>That’s it! You have now installed Maven and JDK on your Ubuntu system. You can use Maven for building projects and the JDK for developing and running Java applications.</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">To install Maven and JDK (Java Development Kit) on Ubuntu, you can follow these steps。</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="maven" scheme="https://note.batype.com/categories/linux/maven/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="maven" scheme="https://note.batype.com/tags/maven/"/>
    
    <category term="jdk" scheme="https://note.batype.com/tags/jdk/"/>
    
  </entry>
  
  <entry>
    <title>zsh install</title>
    <link href="https://note.batype.com/linux/install/zsh.html"/>
    <id>https://note.batype.com/linux/install/zsh.html</id>
    <published>2023-11-13T06:32:08.000Z</published>
    <updated>2023-11-28T08:49:04.281Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>Manual Installation</p><h3 id="Clone-The-Repository"><a href="#Clone-The-Repository" class="headerlink" title="Clone The Repository"></a>Clone The Repository</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://githubfast.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh</span><br></pre></td></tr></table></figure><h3 id="Optionally-Backup-Your-Existing-zshrc-File"><a href="#Optionally-Backup-Your-Existing-zshrc-File" class="headerlink" title="Optionally, Backup Your Existing ~&#x2F;.zshrc File"></a>Optionally, Backup Your Existing ~&#x2F;.zshrc File</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp ~/.zshrc ~/.zshrc.orig</span><br></pre></td></tr></table></figure><h3 id="Create-A-New-Zsh-Configuration-File"><a href="#Create-A-New-Zsh-Configuration-File" class="headerlink" title="Create A New Zsh Configuration File"></a>Create A New Zsh Configuration File</h3><p>You can create a new zsh config file by copying the template that we have included for you.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</span><br></pre></td></tr></table></figure><h3 id="Change-Your-Default-Shell"><a href="#Change-Your-Default-Shell" class="headerlink" title="Change Your Default Shell"></a>Change Your Default Shell</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">which zsh</span><br><span class="line">chsh -s $(which zsh)</span><br></pre></td></tr></table></figure><p>You must log out from your user session and log back in to see this change.</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">Oh My Zsh is an open source, community-driven framework for managing your zsh configuration.</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="zsh" scheme="https://note.batype.com/categories/linux/zsh/"/>
    
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="zsh" scheme="https://note.batype.com/tags/zsh/"/>
    
  </entry>
  
  <entry>
    <title>docker-compose install</title>
    <link href="https://note.batype.com/linux/install/docker-compose.html"/>
    <id>https://note.batype.com/linux/install/docker-compose.html</id>
    <published>2023-11-13T02:36:03.000Z</published>
    <updated>2023-11-28T08:49:04.272Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h3 id="Curl-下载"><a href="#Curl-下载" class="headerlink" title="Curl 下载"></a>Curl 下载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L &quot;https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><h3 id="修改权限"><a href="#修改权限" class="headerlink" title="修改权限"></a>修改权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><h3 id="查询版本"><a href="#查询版本" class="headerlink" title="查询版本"></a>查询版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>需要将运行yml 命名为 docker-compose.yml</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">ubantu use wechat, 使用的是模拟window环境打开wechat。</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="docker-compose" scheme="https://note.batype.com/categories/linux/docker-compose/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="docker-compose" scheme="https://note.batype.com/tags/docker-compose/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu解压Zip文件命令详解</title>
    <link href="https://note.batype.com/linux/use/zip.html"/>
    <id>https://note.batype.com/linux/use/zip.html</id>
    <published>2023-11-12T11:22:59.000Z</published>
    <updated>2023-11-28T08:49:04.277Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><p>Ubuntu解压Zip文件的命令是“unzip”，它可以解压几乎所有的Zip文件。其基本的语法为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip [option] filename.zip</span><br></pre></td></tr></table></figure><p>其中，filename.zip表示要解压的Zip文件名，option参数是可选的，用来控制解压的行为，常用的option参数如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-d：指定解压到的目录，例如：unzip -d /home/user/untitled filename.zip，即将filename.zip解压到/home/user/untitled目录；</span><br><span class="line">-q：不显示详细信息，即不显示每个文件的解压进度信息；</span><br><span class="line">-o：覆盖目标文件，即如果目标文件存在就覆盖它；</span><br><span class="line">-P：指定Zip文件的密码。</span><br></pre></td></tr></table></figure><h3 id="解压Zip文件到当前路径"><a href="#解压Zip文件到当前路径" class="headerlink" title="解压Zip文件到当前路径"></a>解压Zip文件到当前路径</h3><p>解压一个Zip文件到当前路径很简单，只要在终端中输入“unzip filename.zip”即可。比如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip archive.zip</span><br></pre></td></tr></table></figure><p>上述命令将会将“archive.zip”文件解压到当前路径中。如果你希望将Zip文件解压到另外一个路径，可以使用“-d”参数，如下所示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip archive.zip -d /home/user/some_folder</span><br></pre></td></tr></table></figure><p>上述命令将会将“archive.zip”文件解压到“&#x2F;home&#x2F;user&#x2F;some_folder”路径中。</p><h3 id="解压指定的文件"><a href="#解压指定的文件" class="headerlink" title="解压指定的文件"></a>解压指定的文件</h3><p>有时候我们只需要解压Zip文件中的某些文件，而不是全部文件，这时候可以使用“unzip -j”命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip -j archive.zip file.txt</span><br></pre></td></tr></table></figure><p>上述命令将会将“archive.zip”文件中的“file.txt”文件解压到当前路径中。</p><h3 id="解压时覆盖已存在的文件"><a href="#解压时覆盖已存在的文件" class="headerlink" title="解压时覆盖已存在的文件"></a>解压时覆盖已存在的文件</h3><p>默认情况下，如果解压的目标文件已经存在，unzip命令会提示是否覆盖。如果你希望不进行提示，强制覆盖已经存在的文件，可以使用“-o”参数。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip -o archive.zip</span><br></pre></td></tr></table></figure><p>上述命令将会解压“archive.zip”文件到当前路径中，如果有重名的文件会强制覆盖。</p><h3 id="解压时保留目录结构"><a href="#解压时保留目录结构" class="headerlink" title="解压时保留目录结构"></a>解压时保留目录结构</h3><p>默认情况下，unzip命令会将Zip文件中的所有文件解压到当前路径中，不管其原来所在的目录结构。如果你希望保留原来的目录结构，可以使用“unzip -j”命令，如下所示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip archive.zip -d /home/user/some_folder</span><br></pre></td></tr></table></figure><p>上述命令将会将“archive.zip”文件解压到“&#x2F;home&#x2F;user&#x2F;some_folder”路径中，并保留原来的目录结构。</p><h3 id="解压时指定密码"><a href="#解压时指定密码" class="headerlink" title="解压时指定密码"></a>解压时指定密码</h3><p>如果Zip文件设置了密码，那么我们需要在解压时指定密码。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip -P secretPassword archive.zip</span><br></pre></td></tr></table></figure><p>上述命令将会解压“archive.zip”文件，并使用“secretPassword”作为密码。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">Ubuntu解压Zip文件的命令是“unzip”，它可以解压几乎所有的Zip文件。。</summary>
    
    
    
    <category term="linux" scheme="https://note.batype.com/categories/linux/"/>
    
    <category term="zip" scheme="https://note.batype.com/categories/linux/zip/"/>
    
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="zip" scheme="https://note.batype.com/tags/zip/"/>
    
  </entry>
  
  <entry>
    <title>deb  使用命令</title>
    <link href="https://note.batype.com/linux/install/deb.html"/>
    <id>https://note.batype.com/linux/install/deb.html</id>
    <published>2023-11-11T04:24:32.000Z</published>
    <updated>2024-01-08T02:06:24.707Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>使用dpkg命令：在终端中运行以下命令来安装.deb文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i &lt;filename&gt;.deb</span><br></pre></td></tr></table></figure></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "31652-1697970027416-119",        "name": "BaType",        "qrcode": "https://i.postimg.cc/BnGK06H2/qrcode-for-gh-50f2ce2229c5-258.jpg",        "keyword": "666"    });}</script>]]></content>
    
    
    <summary type="html">使用dpkg命令：在终端中运行以下命令来安装.deb文件。</summary>
    
    
    
    <category term="前端" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="es6" scheme="https://note.batype.com/categories/%E5%89%8D%E7%AB%AF/es6/"/>
    
    
    <category term="前端" scheme="https://note.batype.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Git" scheme="https://note.batype.com/tags/Git/"/>
    
    <category term="linux" scheme="https://note.batype.com/tags/linux/"/>
    
    <category term="deb" scheme="https://note.batype.com/tags/deb/"/>
    
  </entry>
  
</feed>
